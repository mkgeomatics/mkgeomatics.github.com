<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Web-GIS | mattmakesmaps]]></title>
  <link href="http://mattmakesmaps.com/blog/categories/web-gis/atom.xml" rel="self"/>
  <link href="http://mattmakesmaps.com/"/>
  <updated>2014-01-11T15:10:26-08:00</updated>
  <id>http://mattmakesmaps.com/</id>
  <author>
    <name><![CDATA[Matt Kenny]]></name>
    <email><![CDATA[matthewkenny AT gmail DOT com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Configure PostGIS with Travis CI]]></title>
    <link href="http://mattmakesmaps.com/blog/2014/01/11/configure-postgis-with-travis-ci/"/>
    <updated>2014-01-11T13:03:00-08:00</updated>
    <id>http://mattmakesmaps.com/blog/2014/01/11/configure-postgis-with-travis-ci</id>
    <content type="html"><![CDATA[<p>Thanks to a great presentation by <a href="https://github.com/foundatron">foundatron</a> on the continuous
integration framework, <a href="https://travis-ci.org">Travis CI</a>, I&rsquo;ve finally been motivated to push
for higher test coverage in my python projects.</p>

<p>Some of these <a href="https://github.com/mattmakesmaps/pgsql2gist">projects</a> require connectivity to a
PostGIS database for testing, and with Travis CI that process is extremely straightforward.
This post includes notes on configuring a Travis CI environment with PostgreSQL and PostGIS, then
loading that empty database with data.</p>

<h3>PostgreSQL/Postgis Versions</h3>

<p><strong>NOTE:</strong> These versions are current as of <strong>January 2014</strong>.</p>

<ul>
<li>PostgreSQL: 9.1.11 by default, although you can <a href="http://about.travis-ci.org/blog/2013-11-29-PostgreSQLql-92-93-now-available/">explicitly declare</a> 9.2 or 9.3.</li>
<li>PostGIS: 2.1.1 r12113</li>
<li>GEOS: 3.3.8</li>
<li>PROJ: 4.8.0</li>
<li>GDAL: 1.9.2</li>
</ul>


<!-- more -->


<h3>Configuration</h3>

<p><strong>NOTE:</strong> For background reading on Travis CI, check out the <a href="http://about.travis-ci.org/docs/user/getting-started/">Getting Started</a> and <a href="http://about.travis-ci.org/docs/user/build-configuration/">Build Configuration</a> docs.</p>

<p>As stated in the <a href="http://about.travis-ci.org/docs/user/database-setup/#PostgreSQLQL">database docs</a>,
a Travis CI environment comes with PostgreSQL installed and ready-to-go. This also includes supporting
utilities such as: <code>psql</code>,<code>pg_dump</code>, and <code>pg_restore</code>. Since we&rsquo;re using PostgreSQL 9.1+ and PostGIS 2.0+,
PostGIS can be installed using the <code>CREATE EXTENSION</code> syntax.</p>

<p>The <code>.travis.yml</code> configuration file should now be modified to execute <code>psql</code> calls in the
<code>before_script</code> block to:</p>

<ol>
<li>Create the database</li>
<li>Create the PostGIS/PostGIS Topology Extensions</li>
<li>Populate the database with test data. (See Below for Instructions)</li>
</ol>


<p>A reference example <code>.travis.yml</code> looks like this:</p>

<p>```yml
language: python
python:
  &ndash; &ldquo;2.7&rdquo;</p>

<h1>command to install dependencies</h1>

<p>install:
  &ndash; &ldquo;pip install -r requirements.txt &mdash;use-mirrors&rdquo;</p>

<h1>database creation</h1>

<p>before_script:
  &ndash; psql -c &lsquo;create database travis_postgis;&rsquo; -U postgres
  &ndash; psql -c &lsquo;CREATE EXTENSION postgis;&rsquo; -U postgres -d travis_postgis
  &ndash; psql -c &lsquo;CREATE EXTENSION postgis_topology;&rsquo; -U postgres -d travis_postgis
  &ndash; psql -f test_data.sql -U postgres -d travis_postgis</p>

<h1>command to run tests</h1>

<p>script: nosetests &mdash;verbose
```</p>

<h3>Creating Test Data</h3>

<p>The <code>pg_dump</code> utility can be used to export the contents of a PostGIS database into a sql file,
suitable for loading into a newly created database by the Travis worker. Key to this is to have testing
data that you want to export inside of a separate schema (e.g. not in <code>public</code>). With <code>pg_dump</code> we can
specify an individual schema of data tables to export, otherwise we&rsquo;d be stuck with exporting potentially
incompatible PostGIS function signitures in addition to our data. Boundless has a
<a href="http://workshops.boundlessgeo.com/postgis-intro/backup.html">good article</a> on backup strategies for PostGIS.</p>

<p>From our source PostGIS database, export tables from our schema of interest (<code>test_data</code>) into <code>test_data.sql</code></p>

<p><code>bash
$ pg_dump --schema=test_data travis_postgis &gt; test_data.sql
</code></p>

<p>As seen in the section above, the resulting sql file, <code>test_data.sql</code> is then executed as part of the
Travis <code>before_script</code> block, populating the testing database with geometries.</p>

<p><strong>NOTE:</strong> I&rsquo;ve used the same name <code>travis_postgis</code> for both my local database as well as the testing
database used by Travis CI. This isn&rsquo;t required.</p>

<h3>Wrap Up</h3>

<p>Thanks to the combination of PostgreSQL&rsquo;s easy to use <code>CREATE EXTENSION</code> syntax along with Travis CI&rsquo;s flexible build configurations, setting up a custom PostGIS database is fairly simple.</p>

<p>An example repository with a <code>.travis.yml</code> file and an example unit test can be found here: <a href="https://github.com/mattmakesmaps/travis-postgis-test">https://github.com/mattmakesmaps/travis-postgis-test</a></p>

<p>This repository&rsquo;s Travis CI build log can be found here: <a href="https://travis-ci.org/mattmakesmaps/travis-postgis-test">https://travis-ci.org/mattmakesmaps/travis-postgis-test</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TileStache-Links-Roundup]]></title>
    <link href="http://mattmakesmaps.com/blog/2013/10/15/tilestache-links-roundup/"/>
    <updated>2013-10-15T20:51:00-07:00</updated>
    <id>http://mattmakesmaps.com/blog/2013/10/15/tilestache-links-roundup</id>
    <content type="html"><![CDATA[<p>I&rsquo;m giving a presentation at this year&rsquo;s <a href="http://cugos.org/events/2013/10/16/fall-fling/">CUGOS Fall Fling Bling</a>, on <a href="http://tilestache.org">TileStache</a>. The list below are a series of interesting links I&rsquo;ve found regarding TileStache, or Vector Tiles in general.</p>

<h2>Mind of Migurski</h2>

<ul>
<li><a href="http://mike.teczno.com/notes/vector-tile-rendering-numbers.html">Tiled Vector Update, with Math</a></li>
<li><a href="http://mike.teczno.com/notes/postgreslessness-mapnik-vectiles.html">the libery of postgreslessness: tiled vectors in mapnik</a></li>
<li><a href="http://mike.teczno.com/notes/tilestache.html">Presenting TileStache</a></li>
</ul>


<h2>Nelson Minar Vector Tiles Notes</h2>

<ul>
<li><a href="https://github.com/NelsonMinar/vector-river-map">Map of American Rivers</a>: <strong>NOTE:</strong> This is a fantastic tutorial.</li>
<li><a href="http://bl.ocks.org/NelsonMinar/5851197">TopoJSON Vector Maps from OSM</a></li>
<li><a href="http://vimeopro.com/openstreetmapus/state-of-the-map-us-2013/video/68099164">TopoJSON: A Smaller GeoJSON with Some Neat Tricks</a></li>
</ul>


<h2>Data</h2>

<ul>
<li><a href="http://openstreetmap.us/~migurski/vector-datasource/">OSM US Vector Tiles</a></li>
</ul>


<p>My own slides from the Fall Fling can be found <a href="https://speakerdeck.com/mattmakesmaps/tilestache-more-then-youre-granddads-tilecache-server">here</a>. An introductory blog post on rendering TopoJSON with TileStache can be found, <a href="http://mattmakesmaps.com/blog/2013/10/09/tilestache-rendering-topojson/">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TileStache: Generate [Topo|Geo]JSON Vector Tiles]]></title>
    <link href="http://mattmakesmaps.com/blog/2013/10/09/tilestache-rendering-topojson/"/>
    <updated>2013-10-09T19:25:00-07:00</updated>
    <id>http://mattmakesmaps.com/blog/2013/10/09/tilestache-rendering-topojson</id>
    <content type="html"><![CDATA[<p>Vector tiles are simply tiled representations of geographic data, much like raster tiles
used to power typical web maps such as OpenStreetMap. They differ from traditional
raster tiles however in that instead being an image, they actually contain the
geographic coordinates and attributes of the features that exist within their bounding boxes.
Vector tiles can be used for a variety of different rendered outputs within a modern web-mapping
application. One examples can include serving as an intermediate step in the processing of
raster tiles. This approach is adopted by Mapbox, who have defined their own
<a href="https://www.mapbox.com/blog/vector-tiles/">mapnik-vector-tile</a> spec. This allows for amazing
styling possibilities, allowing raster tiles to be generated with different styles quickly and
efficiently based on the same dataset. Another approach relies on transmitting vector data directly
to the client, where client-side libs render data as SVGs directly in the browser. <a href="http://d3js.org">D3.js</a>
is a JavaScript library that can do this just this, as illustrated by <a href="http://bl.ocks.org/svmatthews/6081504">Sam Matthews</a>. Now that we know what they&rsquo;re good for, how can we take our own local geographic data, and render our own?</p>

<!-- more -->


<p><a href="http://tilestache.org">TileStache</a> is a Tiled Mapping Server written in Python. The core committer on the project
is <a href="http://mike.teczno.com">Michael Migurski</a>, formerly of <a href="http://stamen.com">Stamen Design</a> and now CTO of
<a href="http://www.codeforamerica.org">Code for America</a>. He&rsquo;s blogged extensively about his development of
the TileStache project to incorporate both use-cases illustrated above
(<a href="http://mike.teczno.com/notes/postgreslessness-mapnik-vectiles.html">pipeline to raster tiles via mapnik</a>,
<a href="http://mike.teczno.com/notes/vector-tile-rendering-numbers.html">client-side rendering</a>)</p>

<p>I&rsquo;ve been reviewing the source code for this project for the past few weeks and have been impressed at the accessibility
of the code to a novice Python developer such as myself. In any event, I&rsquo;d like to use this post to drop some
quick notes on how to get things up and running.</p>

<h2>Prerequisites</h2>

<ul>
<li>TileStache Installed With Dependencies</li>
<li>PostGIS Installed</li>
</ul>


<h2>Data</h2>

<p>The dataset I imported for rendering is known as &lsquo;processed_p&rsquo;, which can be downloaded <a href="http://openstreetmapdata.com/data/land-polygons">here</a>. This is the land dataset used in the OpenStreetMap basemap. I picked this dataset because it is highly detailed, large (365 MB), and projected in spherical mercator. This is a perfect example of a dataset in which you would really want to have a server spraying out just those specific slices of data (tiles) a user has requested, from the larger whole.</p>

<h2>Process</h2>

<ol>
<li>Create a PostGIS Database, &lsquo;ts_data&rsquo;</li>
</ol>


<p><code>bash
$ created ts_data
$ psql -d ts_data
ts_data# CREATE EXTENSION postgis;
CREATE EXTENSION
ts_data=# CREATE SCHEMA osm;
CREATE SCHEMA
</code></p>

<ol>
<li>Load processed_p Shapefile into PostGIS</li>
</ol>


<p>NOTE: See the excellent shp2pgsql/pgsql2shp cheat sheet by <a href="http://www.bostongis.com/pgsql2shp_shp2pgsql_quickguide_20.bqg">BostonGIS</a>
``` bash</p>

<h1>NOTE YMMV, MAY NEED TO ADD ADDITIONAL PSQL CONNECTION PARAMS. SEE &lsquo;$psql &mdash;help&rsquo;</h1>

<p>$ shp2pgsql -I -s 900913 land_polygons.shp osm.land_polygons_split | psql -d ts_data
```</p>

<ol>
<li>Create a TileStache Config</li>
</ol>


<p>TileStache relies on a user-defined configuration file to define a layer, accessible by a client.
In this context, a layer is essentially a combination of a backing dataset (e.g. shapefile, MBTiles,
PostGIS database, etc.) and instructions on how those data should be rendered (e.g. Vector Tiles, UTF-GRID, Mapnik, etc.)</p>

<p>An example configuration file can be found <a href="https://github.com/mattmakesmaps/TileStache-Experiment/blob/master/config_files/topojson.cfg#L84-L99">here</a>. I&rsquo;ve highlighted the relevant block, which is excerpted
below. This example uses the VecTiles provider (<a href="http://tilestache.org/doc/TileStache.Goodies.VecTiles.html">docs</a>),
which requires a PostGIS backing store, and produces tiles in geojson, topojson, or Mapnik Vector Tile (MVT) format.
Comments have been added below for clarity.</p>

<p>
``` javascript
&ldquo;osm-processed_p1&rdquo;: { // Layer Name</p>

<pre><code>// Sets ACCESS-CONTROL-ALLOW-ORIGIN header to "*"
"allowed origin": "*", 
"provider": {
    "class": "TileStache.Goodies.VecTiles:Provider",
    // PostGIS Connection Info
    "kwargs": { 
        "dbinfo": {
            "host": "localhost",
            "user": "matt",
            "database": "ts_data"
        },
        // An array of queries for each zoom level.
        // One query == Used for All Zooms
        "queries": [ 
            "SELECT gid, geom AS __geometry__ FROM osm.land_polygons_split"
        ]
    }
}
</code></pre>

<p>}
```
</p>

<ol>
<li>Start the Server.</li>
</ol>


<p>TileStache comes pre-canned with it&rsquo;s own simple development server. If installing TileStache from a python package
manager, It can be accessed from the command line via <code>$ tilestache-server.py</code>.</p>

<p>The server should now be accessible via <a href="http://127.0.0.1:8080/">http://127.0.0.1:8080/</a>. &ldquo;TileStache bellows hello.&rdquo;</p>

<ol>
<li>Request a Tile.</li>
</ol>


<p>From the <a href="http://tilestache.org/doc/">API docs</a>: &ldquo;TileStache URLs are based on a Google Maps-like scheme&rdquo;:</p>

<p><code>
/{layer name}/{zoom}/{column}/{row}.{extension}
</code></p>

<p>Utilizing the layer name referenced in the configuration example above, &ldquo;osm-processed_p1&rdquo;, a tile request would look like:</p>

<p><code>
http://127.0.0.1:8080/osm-processed_p1/9/147/196.topojson #TopoJSON
http://127.0.0.1:8080/osm-processed_p1/9/147/196.json #GeoJSON
http://127.0.0.1:8080/osm-processed_p1/9/147/196.mvt # Mapnik Vector Tile
</code></p>

<p>Looking at the HTTP requests above, we can see that we&rsquo;re calling on the same layer, e.g. the same backing datastore,
but rendering those same data into three different output formats. Pretty neat.</p>

<h2>Wrapping Up</h2>

<p>TileStache vector tiles can be rendered in any number of client side JS libraries that support GeoJSON or TopoJSON.
Pushing the above requested TopoJSON tile to github, we can view the rendered geometries with their attributes.</p>

<p><div><script src='https://gist.github.com/6896905.js?file=s00_9_147_196.topojson'></script>
<noscript><pre><code>{&quot;objects&quot;:{&quot;vectile&quot;:{&quot;type&quot;:&quot;GeometryCollection&quot;,&quot;geometries&quot;:[{&quot;arcs&quot;:[[0]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132148},&quot;clipped&quot;:true,&quot;id&quot;:&quot;cdf2dad9bf&quot;},{&quot;arcs&quot;:[[1]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132149},&quot;clipped&quot;:true,&quot;id&quot;:&quot;f577c6c476&quot;},{&quot;arcs&quot;:[[2]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132150},&quot;clipped&quot;:true,&quot;id&quot;:&quot;cf61e69ac4&quot;},{&quot;arcs&quot;:[[3]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132151},&quot;clipped&quot;:true,&quot;id&quot;:&quot;06d7bcebe6&quot;},{&quot;arcs&quot;:[[4]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132152},&quot;clipped&quot;:true,&quot;id&quot;:&quot;483a9f3660&quot;},{&quot;arcs&quot;:[[5]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132153},&quot;clipped&quot;:true,&quot;id&quot;:&quot;a2e1817cf1&quot;},{&quot;arcs&quot;:[[6]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132154},&quot;clipped&quot;:true,&quot;id&quot;:&quot;8409c14d0c&quot;},{&quot;arcs&quot;:[[7]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132155},&quot;clipped&quot;:true,&quot;id&quot;:&quot;79b65c00b9&quot;},{&quot;arcs&quot;:[[8]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132156},&quot;clipped&quot;:true,&quot;id&quot;:&quot;78cfaffb9f&quot;},{&quot;arcs&quot;:[[9]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132157},&quot;clipped&quot;:true,&quot;id&quot;:&quot;d25f37345c&quot;},{&quot;arcs&quot;:[[10]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132161},&quot;clipped&quot;:true,&quot;id&quot;:&quot;87fffd3593&quot;},{&quot;arcs&quot;:[[11]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132164},&quot;clipped&quot;:true,&quot;id&quot;:&quot;d5849a188f&quot;},{&quot;arcs&quot;:[[12]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132165},&quot;clipped&quot;:true,&quot;id&quot;:&quot;c6fba86600&quot;},{&quot;arcs&quot;:[[13]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132158},&quot;clipped&quot;:true,&quot;id&quot;:&quot;3d02b9d4e0&quot;},{&quot;arcs&quot;:[[14]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132159},&quot;clipped&quot;:true,&quot;id&quot;:&quot;faa5aaf0f9&quot;},{&quot;arcs&quot;:[[15]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132160},&quot;clipped&quot;:true,&quot;id&quot;:&quot;a1110bf5f6&quot;},{&quot;arcs&quot;:[[16]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132173},&quot;clipped&quot;:true,&quot;id&quot;:&quot;bd57c19e69&quot;},{&quot;arcs&quot;:[[17]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132147},&quot;clipped&quot;:true,&quot;id&quot;:&quot;c111dae186&quot;},{&quot;arcs&quot;:[[18]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142087},&quot;clipped&quot;:true,&quot;id&quot;:&quot;8ec73f36e2&quot;},{&quot;arcs&quot;:[[19]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142089},&quot;clipped&quot;:true,&quot;id&quot;:&quot;91e2ed0b62&quot;},{&quot;arcs&quot;:[[20]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142095},&quot;clipped&quot;:true,&quot;id&quot;:&quot;046ba261e3&quot;},{&quot;arcs&quot;:[[21]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142096},&quot;clipped&quot;:true,&quot;id&quot;:&quot;7d1a520c06&quot;},{&quot;arcs&quot;:[[22]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142164},&quot;clipped&quot;:true,&quot;id&quot;:&quot;9f2c36f4b5&quot;},{&quot;arcs&quot;:[[23]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142206},&quot;clipped&quot;:true,&quot;id&quot;:&quot;06b3677f73&quot;},{&quot;arcs&quot;:[[24]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:147120},&quot;clipped&quot;:true,&quot;id&quot;:&quot;852e00341e&quot;},{&quot;arcs&quot;:[[25]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:147144},&quot;clipped&quot;:true,&quot;id&quot;:&quot;c37dbde232&quot;},{&quot;arcs&quot;:[[26]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:147165},&quot;clipped&quot;:true,&quot;id&quot;:&quot;2ff15ba3c0&quot;},{&quot;arcs&quot;:[[27]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:147179},&quot;clipped&quot;:true,&quot;id&quot;:&quot;bb393ac749&quot;},{&quot;arcs&quot;:[[28]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:147180},&quot;clipped&quot;:true,&quot;id&quot;:&quot;67d0a0cb16&quot;},{&quot;arcs&quot;:[[29]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:147207},&quot;clipped&quot;:true,&quot;id&quot;:&quot;f47f7e2abc&quot;},{&quot;arcs&quot;:[[30]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:147212},&quot;clipped&quot;:true,&quot;id&quot;:&quot;0e4f775bff&quot;},{&quot;arcs&quot;:[[31]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:147213},&quot;clipped&quot;:true,&quot;id&quot;:&quot;93b83b749d&quot;},{&quot;arcs&quot;:[[32]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:484986},&quot;clipped&quot;:true,&quot;id&quot;:&quot;0c0caa5c3e&quot;},{&quot;arcs&quot;:[[33]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:530124},&quot;clipped&quot;:true,&quot;id&quot;:&quot;fa0ed3240f&quot;},{&quot;arcs&quot;:[[34]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132167},&quot;clipped&quot;:true,&quot;id&quot;:&quot;d6786bba96&quot;},{&quot;arcs&quot;:[[[35]],[[36]],[[37]]],&quot;type&quot;:&quot;MultiPolygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132171},&quot;clipped&quot;:true,&quot;id&quot;:&quot;44a5b0ca3b&quot;},{&quot;arcs&quot;:[[38]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:131965},&quot;clipped&quot;:true,&quot;id&quot;:&quot;3193bdcf00&quot;},{&quot;arcs&quot;:[[39]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:131966},&quot;clipped&quot;:true,&quot;id&quot;:&quot;dafa4d9024&quot;},{&quot;arcs&quot;:[[40]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:131970},&quot;clipped&quot;:true,&quot;id&quot;:&quot;cbbe95e42a&quot;},{&quot;arcs&quot;:[[41]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:131972},&quot;clipped&quot;:true,&quot;id&quot;:&quot;266d59eaa0&quot;},{&quot;arcs&quot;:[[42]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132162},&quot;clipped&quot;:true,&quot;id&quot;:&quot;53bcc1e76f&quot;},{&quot;arcs&quot;:[[43]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132163},&quot;clipped&quot;:true,&quot;id&quot;:&quot;d381516991&quot;},{&quot;arcs&quot;:[[44]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132166},&quot;clipped&quot;:true,&quot;id&quot;:&quot;2de33e12d8&quot;},{&quot;arcs&quot;:[[45]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:147052},&quot;clipped&quot;:true,&quot;id&quot;:&quot;a04b477784&quot;},{&quot;arcs&quot;:[[46]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:147112},&quot;clipped&quot;:true,&quot;id&quot;:&quot;0d229ab600&quot;},{&quot;arcs&quot;:[[47]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:147211},&quot;clipped&quot;:true,&quot;id&quot;:&quot;8a3669476b&quot;},{&quot;arcs&quot;:[[48]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132130},&quot;clipped&quot;:true,&quot;id&quot;:&quot;74d672d6aa&quot;},{&quot;arcs&quot;:[[49]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132142},&quot;clipped&quot;:true,&quot;id&quot;:&quot;da8805a166&quot;},{&quot;arcs&quot;:[[50]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132143},&quot;clipped&quot;:true,&quot;id&quot;:&quot;5361637907&quot;},{&quot;arcs&quot;:[[51]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132131},&quot;clipped&quot;:true,&quot;id&quot;:&quot;2d81d3f641&quot;},{&quot;arcs&quot;:[[52]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132132},&quot;clipped&quot;:true,&quot;id&quot;:&quot;27ca007c7b&quot;},{&quot;arcs&quot;:[[53]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132133},&quot;clipped&quot;:true,&quot;id&quot;:&quot;ae82fa887e&quot;},{&quot;arcs&quot;:[[54]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132141},&quot;clipped&quot;:true,&quot;id&quot;:&quot;7a90a7a355&quot;},{&quot;arcs&quot;:[[55]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132144},&quot;clipped&quot;:true,&quot;id&quot;:&quot;01fab69460&quot;},{&quot;arcs&quot;:[[56]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132145},&quot;clipped&quot;:true,&quot;id&quot;:&quot;f13eacb14f&quot;},{&quot;arcs&quot;:[[57]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132146},&quot;clipped&quot;:true,&quot;id&quot;:&quot;ab6911a580&quot;},{&quot;arcs&quot;:[[58]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132465},&quot;clipped&quot;:true,&quot;id&quot;:&quot;b4c49dbed3&quot;},{&quot;arcs&quot;:[[59]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132467},&quot;clipped&quot;:true,&quot;id&quot;:&quot;4208012975&quot;},{&quot;arcs&quot;:[[60]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142097},&quot;clipped&quot;:true,&quot;id&quot;:&quot;9422c27108&quot;},{&quot;arcs&quot;:[[61]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:141312},&quot;clipped&quot;:true,&quot;id&quot;:&quot;0a0fde9af5&quot;},{&quot;arcs&quot;:[[62]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:141318},&quot;clipped&quot;:true,&quot;id&quot;:&quot;97fa6d8771&quot;},{&quot;arcs&quot;:[[63]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:141385},&quot;clipped&quot;:true,&quot;id&quot;:&quot;ac81484d20&quot;},{&quot;arcs&quot;:[[64]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:141406},&quot;clipped&quot;:true,&quot;id&quot;:&quot;3c14ba68ee&quot;},{&quot;arcs&quot;:[[65]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142085},&quot;clipped&quot;:true,&quot;id&quot;:&quot;fc46708fa7&quot;},{&quot;arcs&quot;:[[66]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142086},&quot;clipped&quot;:true,&quot;id&quot;:&quot;df106e903a&quot;},{&quot;arcs&quot;:[[67]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142088},&quot;clipped&quot;:true,&quot;id&quot;:&quot;40b7c55cb0&quot;},{&quot;arcs&quot;:[[68]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142090},&quot;clipped&quot;:true,&quot;id&quot;:&quot;6abb18b6f9&quot;},{&quot;arcs&quot;:[[69]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142091},&quot;clipped&quot;:true,&quot;id&quot;:&quot;13d5442d0d&quot;},{&quot;arcs&quot;:[[70]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142092},&quot;clipped&quot;:true,&quot;id&quot;:&quot;2c3f08cb3a&quot;},{&quot;arcs&quot;:[[71]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142093},&quot;clipped&quot;:true,&quot;id&quot;:&quot;7718545d88&quot;},{&quot;arcs&quot;:[[72]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142094},&quot;clipped&quot;:true,&quot;id&quot;:&quot;257e6bc2b4&quot;},{&quot;arcs&quot;:[[73]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142134},&quot;clipped&quot;:true,&quot;id&quot;:&quot;eeba683a73&quot;},{&quot;arcs&quot;:[[74]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142160},&quot;clipped&quot;:true,&quot;id&quot;:&quot;c909f02fea&quot;},{&quot;arcs&quot;:[[75]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142175},&quot;clipped&quot;:true,&quot;id&quot;:&quot;8a4e519b66&quot;},{&quot;arcs&quot;:[[76]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142187},&quot;clipped&quot;:true,&quot;id&quot;:&quot;4fb64cca2b&quot;},{&quot;arcs&quot;:[[77]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142204},&quot;clipped&quot;:true,&quot;id&quot;:&quot;e02a0e738b&quot;},{&quot;arcs&quot;:[[78]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142213},&quot;clipped&quot;:true,&quot;id&quot;:&quot;59e63949bc&quot;},{&quot;arcs&quot;:[[79]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142244},&quot;clipped&quot;:true,&quot;id&quot;:&quot;8f9d949337&quot;},{&quot;arcs&quot;:[[80]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142255},&quot;clipped&quot;:true,&quot;id&quot;:&quot;db031e1951&quot;},{&quot;arcs&quot;:[[81]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:142264},&quot;clipped&quot;:true,&quot;id&quot;:&quot;313b7dc7dc&quot;},{&quot;arcs&quot;:[[82]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:274030},&quot;clipped&quot;:true,&quot;id&quot;:&quot;6784569e29&quot;},{&quot;arcs&quot;:[[83]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132135},&quot;clipped&quot;:true,&quot;id&quot;:&quot;a81f46d6d4&quot;},{&quot;arcs&quot;:[[84]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:132140},&quot;clipped&quot;:true,&quot;id&quot;:&quot;cb1f080454&quot;},{&quot;arcs&quot;:[[85]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:131954},&quot;clipped&quot;:true,&quot;id&quot;:&quot;651446daa9&quot;},{&quot;arcs&quot;:[[[86]],[[87]],[[88]]],&quot;type&quot;:&quot;MultiPolygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:131949},&quot;clipped&quot;:true,&quot;id&quot;:&quot;0a0e3712d4&quot;},{&quot;arcs&quot;:[[89]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:131955},&quot;clipped&quot;:true,&quot;id&quot;:&quot;7b2e903309&quot;},{&quot;arcs&quot;:[[90]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:131967},&quot;clipped&quot;:true,&quot;id&quot;:&quot;e6523ca7ce&quot;},{&quot;arcs&quot;:[[91]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:131968},&quot;clipped&quot;:true,&quot;id&quot;:&quot;2d46b68521&quot;},{&quot;arcs&quot;:[[92]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:131960},&quot;clipped&quot;:true,&quot;id&quot;:&quot;6f0aa0aadf&quot;},{&quot;arcs&quot;:[[93]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:131961},&quot;clipped&quot;:true,&quot;id&quot;:&quot;88d684f2e1&quot;},{&quot;arcs&quot;:[[94]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:131974},&quot;clipped&quot;:true,&quot;id&quot;:&quot;56c863a00f&quot;},{&quot;arcs&quot;:[[95]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:131969},&quot;clipped&quot;:true,&quot;id&quot;:&quot;3bbb873dda&quot;},{&quot;arcs&quot;:[[96]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:131973},&quot;clipped&quot;:true,&quot;id&quot;:&quot;9330b1a24e&quot;},{&quot;arcs&quot;:[[97]],&quot;type&quot;:&quot;Polygon&quot;,&quot;properties&quot;:{&quot;gid&quot;:551656},&quot;clipped&quot;:true,&quot;id&quot;:&quot;fe68fa9e57&quot;}]}},&quot;type&quot;:&quot;Topology&quot;,&quot;transform&quot;:{&quot;translate&quot;:[-76.64062500000001,38.27268853598095],&quot;scale&quot;:[0.0006866455078125139,0.0005370141017540866]},&quot;arcs&quot;:[[[699,501],[-64,0],[-3,5],[-4,1],[0,1],[-6,1],[0,2],[2,0],[3,3],[1,2],[2,2],[1,0],[-1,-1],[1,-2],[3,1],[0,2],[-2,0],[2,3],[0,1],[2,-1],[1,1],[0,-1],[3,-2],[0,-1],[2,1],[0,4],[2,1],[1,-3],[1,0],[0,2],[4,1],[0,-3],[2,-1],[-1,2],[2,0],[1,3],[2,0],[1,1],[2,1],[0,1],[1,-1],[1,2],[5,0],[0,-4],[1,-2],[2,-1],[-1,-1],[0,-2],[-1,0],[0,-1],[1,0],[0,-1],[1,0],[1,-6],[1,0],[1,5],[-1,2],[1,5],[1,0],[0,2],[-2,0],[1,6],[2,1],[3,0],[3,2],[0,-3],[2,-1],[2,-6],[3,0],[-1,-4],[1,0],[0,-1],[1,0],[-1,3],[2,0],[0,-1],[2,-1],[-1,2],[2,1],[0,1],[-1,-1],[-3,1],[-1,2],[-2,0],[0,2],[1,0],[-1,4],[2,0],[-1,1],[-4,1],[0,1],[-1,0],[-1,1],[1,0],[2,1],[-3,0],[-2,4],[-2,-1],[-1,0],[0,1],[1,0],[2,8],[1,2],[2,0],[-2,5],[4,2],[2,4],[1,0],[1,-3],[3,-1],[-2,3],[2,2],[2,-1],[1,-2],[3,-2],[1,1],[2,1],[0,-59]],[[699,562],[-1,0],[-2,4],[-4,0],[-1,0],[0,1],[-2,-1],[-1,1],[-1,1],[-1,3],[-1,0],[2,5],[-4,-2],[-1,-5],[-1,1],[-2,0],[2,-2],[0,-5],[-4,-2],[-2,2],[1,1],[-1,3],[-1,0],[-1,2],[-1,0],[1,1],[-2,0],[0,3],[1,0],[0,1],[-3,0],[1,1],[-1,1],[0,3],[-1,0],[0,3],[1,0],[-1,1],[1,2],[1,0],[1,2],[-1,0],[1,1],[-4,-1],[0,1],[-2,1],[1,-3],[1,0],[-1,-1],[0,-3],[0,-2],[-1,-1],[0,-1],[1,0],[0,-3],[-2,-1],[3,0],[0,-1],[-1,-2],[2,0],[0,-5],[1,0],[1,-1],[-1,0],[1,-1],[2,0],[0,-2],[-3,-1],[0,-1],[4,-1],[0,-3],[-3,-1],[0,-1],[-1,0],[-1,-3],[2,-3],[-4,0],[-2,2],[0,-5],[1,0],[1,-5],[-2,0],[1,-1],[0,-2],[-2,2],[0,1],[-3,0],[0,1],[-2,0],[-1,-3],[-2,0],[0,-1],[-4,1],[0,3],[2,2],[0,1],[-3,-2],[-1,1],[0,4],[-1,-1],[-1,0],[-1,-5],[2,0],[-1,-4],[0,1],[-1,0],[0,1],[-10,-1],[-1,-3],[-1,0],[-1,-2],[-5,0],[1,3],[5,3],[2,5],[-2,6],[2,1],[0,3],[3,1],[0,2],[-1,1],[2,1],[1,4],[1,1],[1,3],[-1,1],[1,3],[0,6],[3,0],[0,1],[-5,0],[1,5],[-1,0],[0,1],[1,0],[0,1],[-3,1],[-1,3],[1,1],[-1,4],[-1,-4],[0,-6],[1,0],[1,-8],[1,0],[0,-1],[-2,0],[1,-2],[0,-1],[-3,0],[0,-1],[1,0],[0,-1],[1,0],[0,-3],[-1,2],[-3,-1],[0,-2],[1,-1],[-2,-1],[1,-4],[-1,0],[-3,1],[0,-1],[2,-1],[-1,-2],[0,-4],[-1,-2],[-2,1],[-1,-2],[-1,0],[0,-3],[-2,1],[0,3],[-3,0],[0,1],[-1,-6],[-4,2],[-1,3],[1,3],[-2,1],[0,2],[1,2],[-1,0],[-1,-2],[-2,1],[-1,0],[-1,-1],[-1,0],[0,1],[-1,0],[-1,1],[-1,-1],[-1,-1],[-1,1],[0,1],[3,2],[-2,5],[-1,0],[0,3],[3,3],[6,1],[2,1],[0,1],[2,3],[1,0],[-2,3],[2,1],[2,4],[1,3],[-2,-1],[-1,-1],[-4,1],[0,2],[-1,-1],[0,-3],[2,-1],[0,-3],[-1,-4],[-1,-2],[-7,-1],[-3,1],[1,-2],[0,-2],[-3,0],[0,-2],[-1,0],[-2,-1],[0,1],[0,1],[-2,0],[1,-3],[1,0],[0,-1],[3,0],[0,-4],[1,-1],[-3,-1],[1,-1],[1,0],[1,0],[0,-1],[-1,-1],[-1,0],[0,-1],[0,-1],[-1,1],[-1,1],[0,-1],[1,-1],[0,-2],[0,-1],[-1,0],[-1,0],[1,-1],[-1,-1],[1,0],[1,1],[1,-1],[0,1],[0,1],[2,-1],[1,-1],[0,1],[1,0],[1,-1],[4,1],[2,-1],[-1,-3],[1,-4],[5,-1],[0,-1],[-5,-1],[-4,0],[-1,-1],[2,-9],[-3,-1],[0,-1],[2,0],[1,-2],[2,0],[0,-2],[-2,0],[1,-1],[0,-3],[2,-3],[-2,1],[-3,1],[0,-2],[-6,0],[0,-3],[-1,1],[0,1],[-3,-1],[0,-2],[-2,-1],[1,-1],[-2,-2],[-1,2],[1,2],[-3,-1],[0,-3],[0,1],[-2,0],[0,-4],[-6,2],[3,5],[0,2],[1,0],[1,2],[-2,2],[1,3],[1,2],[-1,1],[0,2],[1,0],[1,-1],[0,-1],[1,4],[1,1],[2,2],[-2,1],[-1,-2],[-1,1],[-1,-1],[-1,0],[-1,2],[2,2],[2,3],[2,0],[-2,1],[-4,-2],[0,2],[-1,0],[0,-4],[-3,0],[1,-4],[-1,-3],[-1,-1],[0,-1],[1,0],[0,-4],[-1,-1],[1,0],[0,-4],[-2,0],[1,-2],[1,0],[0,-1],[-1,0],[0,-2],[-3,-1],[1,9],[1,0],[-2,10],[1,0],[1,2],[-1,2],[-1,1],[-1,5],[3,2],[0,3],[1,0],[1,1],[2,0],[0,1],[2,1],[0,-1],[3,0],[1,2],[-2,-1],[-2,3],[-3,0],[0,-2],[-2,0],[1,1],[-2,1],[1,4],[-2,2],[1,2],[3,0],[-1,3],[-1,0],[0,-1],[-1,5],[1,2],[1,0],[-1,4],[2,1],[-2,1],[1,3],[0,1],[-2,0],[-2,2],[-1,0],[0,3],[2,2],[1,-1],[0,1],[1,1],[-2,1],[0,-1],[0,1],[0,1],[-1,0],[-2,-3],[-1,0],[2,3],[2,1],[7,0],[1,2],[0,2],[1,2],[2,0],[1,4],[-4,1],[0,5],[2,2],[1,0],[2,-2],[6,-1],[1,1],[-7,1],[0,2],[-2,1],[-2,3],[0,-3],[0,-2],[-2,0],[0,-3],[-4,0],[0,-1],[4,0],[-1,-4],[1,0],[0,-1],[-2,-5],[0,-1],[-1,1],[-3,1],[0,-2],[-2,1],[-1,-3],[-2,1],[1,-2],[-5,0],[0,2],[-1,0],[-1,2],[-2,3],[-1,0],[0,1],[-1,0],[3,-10],[4,-4],[0,-1],[1,0],[5,-11],[-3,0],[1,-2],[1,0],[1,-3],[-2,0],[-1,-3],[1,-2],[-3,-1],[-1,6],[-2,0],[0,-1],[-1,-2],[-1,0],[0,-2],[1,0],[1,-2],[2,-1],[-1,-2],[-2,0],[0,-2],[-2,0],[3,0],[0,-1],[2,2],[1,-4],[1,0],[1,-2],[-2,-1],[0,-1],[1,0],[0,-6],[-3,0],[0,2],[0,2],[-2,1],[-3,-1],[0,-1],[1,0],[0,-4],[-2,1],[0,1],[-1,1],[-2,-1],[0,-1],[0,-1],[-2,0],[-1,4],[-1,-2],[0,-4],[2,-3],[0,1],[2,0],[0,-3],[1,0],[0,1],[3,0],[0,-1],[2,0],[0,-1],[2,1],[1,-5],[1,-2],[-2,-1],[-1,-3],[-1,2],[-6,-2],[0,-1],[2,-1],[-1,-1],[-1,0],[0,-1],[3,-1],[0,1],[3,-1],[4,1],[1,-3],[-5,-1],[0,-1],[-1,0],[2,-5],[1,0],[1,-1],[0,-4],[-3,0],[0,-2],[1,0],[0,-1],[-5,0],[-1,1],[1,8],[-1,1],[0,1],[-1,0],[0,1],[-5,-1],[0,-1],[-1,0],[0,1],[-1,0],[1,3],[2,0],[0,3],[-2,3],[-4,1],[0,2],[1,0],[-1,12],[-1,0],[0,1],[-6,1],[0,1],[2,0],[1,3],[1,0],[0,3],[1,1],[0,1],[0,2],[1,0],[1,4],[2,0],[1,1],[-2,0],[0,2],[-1,0],[0,1],[-2,0],[0,1],[-2,-1],[0,1],[2,1],[1,2],[2,0],[-1,3],[-3,-1],[-1,-3],[-3,1],[-3,6],[-2,0],[0,-10],[1,-2],[1,0],[0,-3],[2,0],[0,-1],[-2,-1],[0,-3],[0,-1],[-2,0],[-5,0],[-1,-4],[2,0],[0,-4],[-1,0],[0,-3],[3,0],[-2,-4],[-1,0],[2,-3],[2,1],[0,-1],[2,0],[1,-2],[2,0],[-1,-3],[-4,1],[1,-2],[1,0],[-1,-1],[-1,-1],[0,-1],[1,0],[0,-1],[4,1],[-1,-1],[4,-3],[-2,-1],[-1,-1],[-2,0],[-1,2],[-2,0],[2,-6],[1,0],[0,-1],[5,1],[0,-5],[-1,-2],[-2,-1],[0,7],[-2,0],[0,-3],[0,-3],[-3,-1],[-3,3],[-1,2],[-1,-1],[0,1],[-1,0],[1,3],[1,0],[-1,8],[0,1],[1,0],[-6,15],[-1,0],[-2,4],[-4,0],[0,2],[0,1],[-1,0],[0,2],[-1,0],[-1,1],[-1,3],[-3,3],[-1,1],[-1,2],[-2,0],[0,1],[-11,0],[-1,1],[1,0],[1,2],[-1,0],[-2,2],[-7,1],[2,3],[4,-1],[1,2],[2,0],[0,1],[4,3],[0,1],[3,2],[0,2],[2,0],[0,3],[1,0],[0,2],[1,1],[0,-2],[4,1],[-2,-9],[1,-1],[1,-1],[7,-3],[2,-4],[0,-1],[-1,0],[2,-2],[1,-1],[0,-1],[0,-2],[1,1],[1,4],[-1,0],[0,3],[1,-1],[0,3],[2,0],[2,3],[0,4],[-1,1],[1,0],[1,1],[1,2],[11,5],[-1,-2],[4,-2],[-2,3],[0,2],[2,2],[5,3],[-3,2],[0,1],[-2,0],[-1,2],[-1,0],[1,2],[6,-3],[1,0],[-1,2],[-1,3],[-4,1],[1,2],[-2,1],[-4,-2],[0,-2],[-1,0],[0,-1],[-3,1],[1,5],[1,0],[1,2],[1,0],[0,3],[2,1],[1,-2],[4,-1],[3,4],[-2,-1],[1,4],[0,2],[-1,1],[0,1],[0,-1],[3,-1],[-1,3],[2,-1],[2,1],[-2,4],[2,0],[-1,1],[-2,1],[-1,0],[0,-2],[-10,-1],[-6,0],[1,-1],[1,0],[0,-1],[-2,0],[-1,0],[-1,4],[-1,0],[0,1],[1,5],[-1,0],[-2,4],[-2,1],[0,1],[-1,1],[-1,7],[-1,1],[-4,14],[-3,2],[-1,3],[1,1],[0,-2],[2,-3],[7,-1],[0,-1],[0,-1],[4,-2],[1,-5],[3,0],[0,-1],[1,-1],[0,-3],[0,1],[-1,0],[-1,2],[-5,0],[0,-4],[1,-1],[0,-3],[-1,-1],[-1,0],[0,-3],[1,0],[0,1],[5,0],[0,-2],[0,-2],[-1,1],[0,-2],[1,0],[1,-3],[5,0],[0,-1],[5,0],[0,-1],[1,0],[0,3],[-1,0],[-1,1],[-2,0],[-1,3],[7,1],[1,-1],[1,0],[-2,8],[1,0],[0,1],[2,2],[1,0],[1,3],[1,0],[0,-2],[1,0],[0,-3],[0,-2],[1,0],[-1,-1],[2,-2],[0,-2],[-1,0],[0,-1],[4,-1],[1,-3],[2,2],[-1,3],[-3,6],[3,0],[2,1],[0,-1],[2,-1],[3,-2],[1,0],[-1,3],[1,0],[-1,5],[-1,0],[-1,4],[-1,0],[0,1],[-1,0],[0,1],[-1,5],[5,2],[0,1],[1,0],[0,2],[1,0],[34,44],[94,0],[0,-139]],[[604,699],[2,2],[34,43],[-1,2],[-2,2],[-1,2],[-1,0],[0,1],[-1,0],[0,1],[-2,0],[-4,9],[-4,1],[0,1],[-1,6],[-1,2],[-2,0],[0,5],[2,0],[0,2],[2,0],[0,2],[-1,0],[0,1],[-1,0],[-1,2],[-3,2],[-2,3],[-1,0],[-1,2],[1,4],[4,0],[0,-1],[3,-2],[2,1],[-1,3],[0,1],[-2,1],[0,1],[-3,2],[-1,2],[5,0],[0,1],[2,1],[0,1],[2,0],[-1,-3],[0,-2],[3,0],[0,-1],[3,-1],[-2,3],[4,-1],[1,3],[1,0],[0,-2],[1,-1],[-1,-4],[2,-3],[0,1],[3,-2],[0,2],[-2,0],[1,2],[-1,3],[2,1],[2,-3],[0,-1],[1,-1],[0,1],[-1,4],[1,5],[-1,2],[1,1],[5,-1],[0,2],[-6,1],[-1,4],[-1,0],[1,3],[-1,0],[-2,4],[-2,-2],[2,-1],[0,-3],[1,-5],[1,0],[0,-5],[-3,2],[0,1],[-2,0],[0,-1],[-1,0],[0,1],[-2,-1],[-1,1],[0,-1],[-1,0],[0,1],[-3,1],[-1,2],[-1,0],[1,6],[-2,1],[0,1],[-1,2],[-1,0],[-1,-2],[1,-4],[0,-4],[-1,-1],[-3,1],[-1,0],[-3,1],[-2,4],[-1,2],[-6,2],[0,1],[-2,0],[1,2],[-1,1],[-2,1],[0,-3],[-1,-1],[-3,0],[2,-2],[3,0],[0,-3],[1,0],[-1,-4],[2,0],[-1,-2],[0,1],[-2,-1],[0,-3],[1,-3],[3,-1],[-1,-4],[1,0],[-1,-2],[0,-1],[1,0],[0,-4],[-2,-1],[-1,2],[-2,2],[0,1],[-2,8],[-1,0],[1,2],[-2,0],[-1,1],[0,1],[-1,0],[1,-2],[1,-1],[-3,2],[0,1],[-1,0],[0,2],[-1,0],[0,2],[-2,0],[0,3],[-1,0],[-1,2],[-1,1],[0,3],[1,0],[-2,8],[1,6],[1,0],[0,1],[1,0],[1,4],[3,0],[0,-1],[-1,0],[0,-1],[1,0],[1,-2],[2,0],[2,-5],[2,0],[1,2],[-2,0],[0,3],[1,0],[-1,3],[-1,0],[3,2],[0,6],[-1,2],[-3,5],[0,1],[-4,-1],[-3,2],[-1,0],[1,3],[-1,-1],[0,2],[-2,0],[1,4],[7,0],[3,1],[-1,2],[1,0],[0,1],[2,0],[0,1],[2,-3],[3,0],[6,-3],[2,-3],[0,-1],[-4,0],[0,-1],[-1,1],[0,-1],[0,-2],[6,-1],[0,-1],[2,0],[0,-3],[-2,-1],[0,-2],[1,0],[-4,-1],[0,-1],[2,0],[0,-2],[2,0],[0,-4],[-1,0],[2,-3],[4,-5],[-1,6],[-1,0],[1,3],[3,0],[0,1],[-2,0],[0,1],[-2,1],[0,3],[1,1],[2,0],[0,1],[3,1],[2,2],[-1,0],[5,4],[1,0],[2,0],[0,-1],[3,-1],[1,-1],[2,0],[-1,-2],[-3,-1],[1,-1],[0,-1],[2,-1],[0,-1],[-2,-1],[1,-2],[-2,0],[0,-1],[1,0],[1,-4],[0,2],[2,0],[0,1],[0,2],[1,0],[-1,1],[1,5],[1,0],[1,-2],[7,1],[0,-1],[2,1],[0,-5],[1,3],[6,1],[1,-4],[1,0],[-1,0],[0,-1],[2,-1],[0,-1],[1,0],[1,3],[1,0],[0,2],[1,1],[0,1],[0,3],[2,2],[0,3],[-2,-1],[0,-1],[-1,0],[0,-2],[-1,-1],[-1,-3],[-1,2],[-2,2],[0,4],[1,5],[-1,0],[0,2],[1,2],[4,1],[1,2],[1,0],[1,3],[-1,1],[0,-2],[-2,-1],[-1,-2],[-1,0],[-3,-1],[-1,-2],[-1,0],[0,-2],[-1,0],[0,1],[1,4],[-2,-1],[0,-4],[0,-2],[2,-2],[-1,0],[0,-6],[-2,1],[0,4],[-2,0],[0,3],[-2,3],[0,1],[-1,0],[-1,1],[0,9],[3,4],[1,-1],[0,-1],[1,0],[1,-1],[1,0],[0,2],[-1,3],[3,0],[1,1],[0,1],[0,4],[-3,-2],[0,-1],[-1,0],[-1,5],[-1,1],[1,0],[0,3],[1,0],[1,1],[-3,-2],[-1,-2],[-2,0],[2,-3],[0,-5],[-1,0],[0,-1],[-1,0],[-2,0],[0,2],[-1,0],[1,0],[-1,5],[-2,0],[0,2],[-2,0],[-1,2],[3,8],[-1,0],[-1,-3],[-1,0],[0,-2],[-1,-1],[-3,2],[0,1],[-1,0],[1,-3],[2,-1],[0,-1],[-1,0],[1,-4],[4,-1],[0,-2],[0,-3],[-2,-1],[0,-1],[1,1],[2,-2],[-1,-8],[0,-1],[1,-4],[-2,0],[0,1],[-7,3],[-2,3],[-1,3],[2,1],[0,3],[-3,1],[0,4],[-2,1],[-2,3],[-2,5],[-1,0],[0,4],[-2,0],[0,-2],[0,-5],[1,-1],[1,-6],[1,0],[1,-4],[-2,-3],[-4,8],[-1,0],[0,1],[-3,0],[-1,3],[-1,0],[-1,1],[-2,0],[-2,2],[-1,0],[-1,5],[4,-1],[-1,3],[-1,0],[0,1],[-1,-1],[1,1],[64,0],[8,-3],[-3,-1],[-1,-2],[-2,0],[0,-1],[2,0],[-1,-4],[3,0],[-1,-4],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,-1],[-1,0],[0,-2],[3,1],[0,1],[2,0],[1,0],[3,1],[1,-3],[2,0],[1,-3],[2,2],[-1,0],[-1,2],[-1,0],[0,2],[1,0],[0,3],[-2,-1],[-2,1],[0,1],[-3,-2],[0,2],[1,0],[1,3],[0,4],[-1,0],[4,2],[0,1],[-2,0],[0,1],[4,1],[1,2],[1,0],[11,0],[0,-199],[-95,0]],[[739,501],[0,1],[4,1],[2,4],[1,1],[1,1],[1,3],[-1,0],[-1,-3],[-1,0],[-2,-4],[-4,0],[-2,-3],[-1,0],[0,-1],[-5,0],[0,2],[-1,0],[0,-2],[-3,1],[0,1],[-1,-2],[-6,0],[0,1],[2,1],[-2,6],[0,-1],[-1,-5],[-2,-1],[1,-1],[-20,0],[0,58],[3,1],[1,-2],[0,1],[2,0],[0,1],[2,0],[0,-2],[5,1],[0,3],[3,-1],[2,-3],[3,0],[-4,2],[1,1],[-2,2],[-4,0],[0,-2],[-3,0],[-1,1],[-8,0],[0,336],[210,0],[0,-397],[-169,0]],[[578,898],[1,-1],[2,-3],[-4,2],[0,2],[-1,0],[2,0]],[[574,898],[0,-2],[1,0],[0,-2],[-2,0],[2,-3],[0,1],[1,0],[0,-1],[1,-1],[0,-1],[1,-1],[-1,0],[0,-1],[-1,0],[0,1],[-1,0],[0,-1],[-1,0],[-1,0],[0,1],[-1,-1],[0,1],[-1,0],[-1,0],[-1,0],[-1,0],[-1,1],[-2,0],[-1,-1],[-1,0],[0,-1],[-1,0],[0,1],[-1,0],[0,1],[0,1],[-1,1],[1,0],[1,1],[3,2],[0,1],[0,1],[-1,0],[1,1],[-1,1],[10,0]],[[562,898]],[[555,898],[-1,-1],[-1,0],[-1,0],[0,-1],[-1,-1],[0,-1],[1,0],[0,-1],[-1,0],[-1,0],[0,1],[-1,-1],[-1,0],[0,-1],[1,0],[1,0],[-1,-1],[0,-1],[0,-1],[3,-1],[0,-1],[1,0],[0,-1],[0,-1],[-1,-1],[0,1],[-1,0],[-1,0],[-1,1],[-1,-1],[0,1],[-1,0],[0,-1],[1,0],[0,-1],[0,-1],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[0,-1],[-1,0],[-1,0],[0,1],[-1,1],[0,1],[-1,0],[0,1],[1,1],[0,1],[0,1],[0,1],[0,1],[-2,0],[-1,0],[-1,1],[-1,0],[-1,-1],[0,-1],[-1,-1],[1,-1],[0,-1],[1,-1],[0,-1],[-1,0],[-1,-1],[0,-1],[-1,0],[0,-1],[1,0],[1,0],[0,-1],[-1,0],[0,-1],[-1,0],[-1,0],[0,1],[-1,-1],[-1,1],[0,1],[1,10],[0,1],[0,1],[1,2],[-1,1],[1,0],[0,1],[0,1],[1,1],[0,1],[1,0],[19,0]],[[533,898],[0,-1],[-1,0],[-1,0],[0,-1],[-1,1],[0,-1],[1,-1],[0,-1],[-1,0],[0,-1],[0,-1],[0,-1],[0,-1],[0,-1],[0,-1],[0,-1],[-1,-1],[0,-1],[-1,-1],[0,-1],[-1,0],[0,-1],[0,-1],[-1,0],[-1,4],[1,1],[0,1],[1,1],[0,1],[0,3],[-1,1],[0,1],[0,1],[0,1],[-1,0],[-1,-2],[0,-1],[0,-1],[0,-1],[1,0],[-1,-1],[0,-2],[-1,0],[0,-1],[-1,0],[0,1],[-1,1],[0,1],[-1,1],[0,1],[-1,0],[0,-1],[-1,-1],[-1,0],[-1,-1],[0,1],[0,1],[0,1],[-1,0],[-1,0],[0,1],[0,1],[1,0],[-1,1],[-1,-1],[0,1],[0,1],[0,1],[1,1],[-1,0],[20,0]],[[555,856],[-2,-1],[0,-2],[-3,0],[-1,-2],[-2,0],[0,3],[-2,2],[1,0],[9,0]],[[476,898],[1,-12],[-1,-1],[1,-5],[-2,-1],[0,-1],[-4,-1],[1,5],[-2,5],[-3,-1],[1,-3],[-1,-3],[-1,-2],[1,-2],[0,-1],[-1,-1],[-1,0],[-1,-1],[-1,1],[-3,4],[-1,0],[1,-4],[0,-8],[-2,0],[0,-2],[3,-1],[1,0],[0,2],[2,1],[0,-1],[2,0],[1,-3],[4,1],[-1,4],[5,-1],[0,-5],[2,-8],[-1,0],[-3,-1],[-4,2],[-1,-4],[-3,0],[2,-6],[-5,-8],[0,-3],[-2,-4],[-2,-1],[1,2],[-2,2],[-1,0],[0,1],[-1,0],[2,-5],[0,-1],[-2,0],[-1,2],[-1,0],[-2,2],[-5,3],[1,2],[-4,8],[0,2],[1,0],[1,2],[-1,1],[1,0],[1,-3],[1,0],[-1,3],[1,0],[2,3],[-1,0],[0,-1],[-2,0],[0,3],[1,3],[0,1],[-1,0],[1,1],[0,4],[-1,0],[-2,-7],[-1,0],[0,-5],[-1,0],[-1,-4],[-1,-1],[-2,5],[1,2],[0,1],[1,0],[1,8],[1,1],[-1,0],[0,1],[-1,-1],[0,-1],[-1,-1],[0,-2],[-1,-2],[0,-1],[-1,0],[0,1],[1,4],[-1,0],[3,5],[-4,18],[3,13],[-1,1],[38,0]],[[642,897],[1,1],[-1,0],[0,-1],[-34,0],[0,1],[-1,-1],[1,2],[1,0],[1,4],[-2,3],[-2,0],[0,2],[-4,2],[0,1],[-2,0],[0,1],[2,0],[2,3],[1,3],[0,1],[0,2],[4,1],[0,-2],[2,-2],[0,-1],[-1,0],[0,-2],[1,0],[2,-2],[2,0],[-2,10],[-3,4],[4,1],[1,-2],[2,-1],[0,1],[3,1],[0,2],[-4,-1],[0,2],[-1,1],[0,1],[-4,-2],[0,2],[0,4],[-3,-1],[1,-1],[-1,-1],[0,-3],[-1,0],[0,-3],[-5,0],[-3,6],[0,2],[-2,1],[0,2],[1,0],[0,1],[3,2],[0,1],[3,0],[-1,5],[1,0],[0,1],[0,1],[-1,0],[0,-1],[0,-1],[-1,0],[0,-2],[0,-1],[-2,0],[0,-1],[-5,-1],[-1,0],[-2,5],[-1,0],[0,-2],[-1,0],[0,-1],[2,0],[-1,-1],[1,-4],[2,-1],[0,-2],[1,-3],[0,-2],[-1,-1],[-4,1],[-8,-2],[0,-2],[8,1],[4,-1],[3,0],[1,-3],[-2,-2],[0,-1],[1,0],[1,-1],[1,0],[-1,-3],[-3,-2],[-1,0],[0,1],[-2,0],[1,-2],[-2,0],[-1,0],[1,-1],[-2,0],[0,1],[-2,0],[-1,2],[-1,0],[-1,2],[-2,0],[-1,3],[2,0],[0,2],[-4,1],[-9,-2],[1,4],[-2,3],[0,1],[2,0],[0,1],[-5,-1],[-2,2],[-1,0],[0,2],[2,0],[0,2],[-3,1],[1,1],[2,1],[2,5],[2,0],[-1,2],[1,1],[1,1],[2,1],[0,2],[1,0],[1,2],[-2,0],[0,1],[-2,0],[-2,-4],[-2,0],[0,1],[-1,0],[0,-3],[-1,-1],[-5,-1],[0,9],[1,0],[2,4],[-1,3],[4,0],[1,4],[1,1],[3,-2],[-2,3],[3,6],[6,-2],[1,1],[2,6],[4,0],[-1,4],[-3,0],[0,6],[1,2],[4,3],[0,1],[-2,0],[-1,-2],[-3,-1],[-1,-2],[-2,1],[0,-1],[1,-6],[-2,-3],[-1,-3],[-3,0],[0,3],[-1,-1],[-2,-5],[-2,-1],[-1,-2],[-1,0],[0,-1],[-2,0],[0,5],[-1,1],[0,1],[-2,0],[1,3],[-1,0],[0,1],[-1,0],[0,-1],[-2,-3],[1,-2],[2,-1],[0,-2],[-1,0],[1,-3],[0,-3],[-2,-1],[-1,-8],[0,1],[0,44],[1,1],[1,0],[1,0],[0,1],[0,1],[-1,0],[-1,-1],[0,1],[0,1],[0,1],[-1,1],[1,1],[0,1],[-1,0],[0,13],[16,0],[2,-1],[-1,-1],[0,-1],[1,-1],[1,-1],[1,-2],[0,-1],[0,-1],[-2,-1],[-2,2],[-1,0],[0,-1],[1,0],[1,-1],[0,-1],[1,0],[1,0],[-1,-2],[1,0],[2,1],[2,2],[2,-1],[1,-1],[-1,-3],[-1,0],[-1,0],[-1,-1],[0,-1],[1,1],[0,-1],[0,-2],[1,1],[0,1],[1,0],[1,0],[1,-1],[1,0],[-1,3],[3,0],[1,0],[0,-1],[0,1],[2,1],[1,1],[-1,0],[-1,1],[0,-1],[-1,1],[0,2],[-1,2],[-1,1],[0,2],[1,0],[3,1],[1,0],[1,0],[2,0],[0,1],[1,0],[1,0],[1,0],[3,1],[0,-1],[0,-1],[-1,0],[-1,0],[-1,0],[0,-1],[-1,0],[1,-1],[0,-1],[1,0],[0,-1],[1,-2],[1,-2],[1,-4],[1,0],[-1,9],[2,1],[2,-1],[1,-4],[4,-4],[1,-2],[3,-3],[1,-1],[0,-1],[3,-2],[1,0],[7,-9],[-1,0],[0,-1],[1,1],[0,-1],[-1,-2],[-2,0],[-1,-3],[-1,0],[0,-1],[-4,0],[1,2],[1,0],[0,1],[-2,-1],[-2,0],[-1,3],[-4,2],[0,2],[-1,0],[0,-2],[2,-2],[1,-1],[1,-1],[-3,1],[0,-1],[2,0],[1,-1],[0,-2],[-3,-2],[-2,0],[-1,-4],[1,0],[1,2],[3,0],[0,1],[2,1],[0,-1],[2,1],[1,-3],[0,-2],[-2,0],[-1,-1],[0,-1],[4,0],[4,-2],[-2,-3],[-1,-1],[-1,-2],[-1,-1],[0,-1],[0,-1],[0,-1],[-1,0],[0,1],[-1,1],[-1,1],[-1,0],[-1,0],[-1,0],[-1,0],[1,-1],[1,-1],[0,-1],[0,-1],[-1,0],[0,1],[0,-1],[0,1],[0,-1],[1,0],[0,-1],[0,-1],[1,0],[0,-1],[0,1],[2,0],[1,-1],[-1,0],[0,-1],[-1,0],[1,0],[-2,0],[0,-1],[-1,1],[-1,0],[-1,0],[-1,0],[1,0],[0,-1],[1,0],[0,-1],[-1,-1],[1,0],[1,0],[0,-1],[1,1],[0,-1],[-1,0],[0,-1],[1,0],[0,-1],[1,0],[1,0],[0,-1],[1,0],[0,1],[-1,0],[-1,1],[0,1],[0,1],[1,0],[1,0],[1,0],[1,0],[0,-1],[0,-1],[1,0],[0,-1],[1,0],[0,-1],[0,1],[-1,1],[0,1],[0,1],[0,2],[2,-2],[1,0],[1,-2],[1,0],[0,-1],[1,0],[0,-1],[1,0],[0,-1],[1,-1],[1,0],[1,-1],[1,-1],[1,-1],[1,0],[0,-1],[0,-1],[1,0],[0,-1],[0,-1],[1,0],[0,-1],[1,0],[1,-1],[3,-3],[0,-2],[-1,0],[0,-1],[-3,-1],[2,-2],[1,-1],[1,-2],[1,-2],[0,-3],[1,0],[1,-2],[0,7],[1,0],[-1,2],[-1,0],[1,2],[1,-1],[1,3],[1,1],[0,1],[3,-3],[1,-2],[-2,-8],[1,0],[1,2],[4,0],[0,-1],[9,-3],[1,-3],[0,-1],[1,0],[-1,-1],[4,-5],[-1,-6],[-2,1],[0,-2],[1,0],[2,-2],[1,0],[0,-1],[8,-4],[-33,0]],[[556,940]],[[538,856],[-1,0],[1,0],[0,-1],[1,0],[-1,-1],[1,-1],[1,0],[1,0],[1,0],[0,-1],[0,-1],[1,0],[1,0],[0,-1],[0,-1],[0,-1],[-1,0],[0,-1],[-1,-1],[0,-1],[0,-1],[-1,-1],[0,-1],[-1,0],[-1,-1],[0,1],[-1,0],[0,1],[0,1],[-1,0],[-1,0],[-1,0],[0,1],[0,-1],[0,1],[-1,0],[-1,1],[-1,0],[0,1],[-1,0],[1,0],[0,1],[-1,0],[-1,0],[0,1],[-1,0],[0,1],[0,1],[-1,0],[1,1],[0,1],[0,1],[-1,0],[0,-1],[-2,1],[-1,1],[1,0],[0,1],[12,0]],[[524,856],[0,-1],[0,-1],[0,-1],[1,-1],[1,0],[-1,-2],[0,-1],[-1,0],[0,1],[-1,0],[-1,0],[-1,0],[0,1],[0,2],[1,0],[0,1],[0,1],[0,1],[-1,0],[0,-1],[-1,0],[-1,0],[-1,0],[0,1],[-1,0],[-1,0],[0,-1],[1,-1],[0,-1],[-1,0],[-1,0],[-1,0],[1,0],[0,-1],[1,0],[0,-1],[0,-1],[-1,0],[-2,1],[-1,0],[0,1],[-1,0],[-1,0],[0,-1],[1,0],[0,-1],[1,0],[0,-1],[1,0],[1,-1],[1,0],[1,0],[0,-1],[1,0],[0,1],[1,0],[1,0],[0,-1],[0,-1],[-1,0],[0,-1],[0,-1],[0,-1],[1,0],[0,1],[0,1],[1,0],[0,1],[1,0],[0,-1],[1,0],[1,0],[1,-1],[0,-1],[-1,0],[0,-1],[1,1],[1,-1],[0,-1],[1,0],[0,-1],[0,-1],[0,-1],[0,-1],[0,1],[1,0],[1,0],[1,0],[1,0],[1,0],[0,-1],[-1,0],[0,-1],[0,-1],[0,-1],[1,0],[-1,0],[0,-1],[1,0],[0,1],[0,-1],[1,1],[-1,-1],[1,0],[0,-1],[0,-1],[0,-1],[2,-2],[-1,0],[0,-1],[-1,0],[0,-1],[-1,0],[1,0],[-1,0],[1,-1],[1,1],[1,0],[0,1],[1,0],[1,1],[1,0],[1,0],[0,-1],[0,-1],[0,-1],[0,-1],[0,-1],[-1,-1],[1,-1],[-1,-1],[1,-2],[0,-1],[0,-1],[0,-1],[0,-1],[0,-1],[-1,0],[0,1],[-1,0],[0,1],[0,1],[-1,0],[-1,1],[-1,0],[1,0],[0,1],[-1,0],[0,1],[-1,0],[1,1],[-1,0],[-1,0],[-1,1],[-1,0],[0,1],[-1,0],[-1,1],[0,1],[-1,0],[0,-1],[0,1],[-1,0],[0,1],[0,1],[-1,0],[-1,-1],[-1,1],[0,1],[0,1],[1,1],[0,1],[-1,0],[0,1],[-1,1],[-1,1],[-1,1],[1,0],[1,0],[-1,1],[0,1],[-1,1],[-1,-1],[0,-1],[0,1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,0],[-1,0],[0,1],[1,1],[0,1],[0,1],[-1,1],[1,0],[0,1],[-1,1],[-1,-1],[0,-1],[-1,1],[0,1],[-1,0],[0,1],[-1,0],[-1,0],[-1,0],[1,-1],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,-1],[-1,-1],[1,-1],[1,0],[0,1],[-1,0],[0,1],[1,0],[0,-1],[0,-1],[0,-1],[0,-1],[0,-1],[0,-1],[0,-1],[-1,1],[0,1],[-1,0],[-1,0],[-1,0],[-1,1],[-1,0],[-1,0],[1,0],[-1,0],[0,1],[0,1],[1,0],[0,1],[1,1],[0,1],[0,1],[1,0],[0,1],[0,1],[1,0],[0,1],[0,1],[0,1],[0,1],[-1,0],[1,0],[0,1],[-1,0],[-1,0],[0,1],[-1,0],[-1,0],[-1,1],[0,1],[1,1],[0,1],[1,0],[2,1],[0,1],[1,0],[1,1],[1,1],[0,1],[0,1],[0,1],[20,0]],[[509,898],[1,-1],[0,-1],[-1,0],[0,-1],[1,0],[0,-1],[0,-1],[-1,-1],[1,0],[0,-1],[0,-1],[1,0],[0,-1],[1,0],[1,-1],[-1,0],[-1,-1],[-1,1],[0,-1],[0,-1],[-1,0],[0,-1],[1,-1],[0,-1],[1,0],[0,1],[0,1],[1,0],[0,1],[1,0],[1,0],[2,-1],[1,0],[1,1],[1,-1],[0,-1],[0,-1],[0,-1],[0,-1],[-1,0],[1,0],[1,-1],[1,0],[0,-1],[0,-1],[1,0],[0,-1],[0,-1],[-1,0],[0,1],[-1,-1],[1,0],[0,-1],[0,-1],[0,-1],[-1,0],[0,-1],[-1,-1],[0,-1],[0,-1],[-1,-1],[-1,0],[0,-2],[-1,0],[-1,0],[0,-1],[2,-1],[0,1],[4,1],[0,2],[1,0],[1,1],[3,1],[0,2],[4,-2],[0,-1],[4,-1],[0,-1],[6,2],[0,1],[2,0],[0,-1],[-2,-1],[0,-1],[-2,-1],[1,-1],[1,1],[2,-1],[0,1],[3,0],[1,-2],[1,0],[1,0],[0,2],[2,0],[0,1],[1,1],[1,1],[1,1],[1,2],[2,-1],[0,1],[1,1],[1,1],[1,-1],[1,-1],[2,-3],[0,-7],[-2,0],[-1,-2],[-2,-1],[0,-1],[-2,0],[0,-2],[-2,-1],[-7,0],[-1,1],[1,0],[-1,1],[-1,1],[0,1],[-1,0],[0,-2],[-1,0],[-2,0],[-1,3],[-1,0],[0,-3],[0,-1],[-1,0],[1,0],[0,-1],[-13,0],[1,0],[0,1],[0,1],[-1,1],[-1,0],[0,-1],[0,-1],[0,-1],[-2,0],[0,1],[-1,0],[0,-1],[-1,0],[-1,0],[-1,0],[0,1],[-1,0],[-1,0],[0,-1],[-12,0],[0,1],[0,1],[0,1],[0,1],[1,0],[0,1],[0,1],[-1,0],[0,1],[0,1],[-1,0],[0,1],[-1,0],[-1,0],[0,1],[0,1],[0,1],[1,0],[-1,1],[1,1],[1,1],[0,1],[0,1],[0,1],[-2,6],[0,2],[-1,5],[-1,2],[-3,1],[-3,1],[-1,-1],[-1,0],[1,1],[0,1],[-1,1],[-1,1],[2,2],[4,3],[13,0]],[[1024,501],[-117,0],[0,523],[117,0],[0,-523]],[[540,502],[-3,-1],[-2,1],[5,0]],[[587,502],[1,1],[0,1],[1,0],[0,1],[1,-1],[0,-1],[-1,0],[-1,-1],[1,-1],[-1,1],[-1,0]],[[489,558],[1,1],[0,-1],[-1,0]],[[679,535],[0,1],[1,0],[0,-1],[-1,0]],[[438,759],[3,-3],[-1,-2],[0,-1],[-1,0],[0,-2],[-1,1],[-1,-4],[1,-3],[2,0],[0,-1],[-1,-3],[-1,0],[-4,11],[-1,2],[-1,0],[2,5],[-1,0],[0,2],[-3,13],[-1,0],[1,5],[-1,1],[1,3],[1,0],[2,10],[1,0],[0,1],[0,2],[-2,6],[-1,0],[-1,1],[1,1],[0,3],[1,0],[1,1],[0,8],[1,0],[1,5],[1,0],[1,3],[0,7],[1,0],[0,2],[0,1],[1,0],[1,0],[-1,-1],[1,0],[1,0],[0,1],[1,-1],[1,1],[1,0],[1,0],[2,-1],[0,-2],[1,1],[1,0],[1,-1],[0,-1],[2,-1],[1,-3],[1,0],[1,-1],[-1,-2],[-4,0],[0,-3],[-1,-2],[-2,-1],[0,2],[-3,1],[1,-6],[4,-1],[-1,-5],[0,-4],[-2,-3],[3,0],[1,-5],[0,-1],[0,-3],[2,0],[1,-2],[0,-1],[1,0],[2,-4],[0,-3],[1,0],[-1,-2],[5,-1],[2,-1],[1,-3],[-3,-8],[2,-6],[-1,0],[0,-1],[0,-3],[-2,0],[0,1],[-5,-1],[-5,1],[-1,1],[1,0],[2,2],[0,1],[-2,1],[0,3],[1,0],[-1,10],[-2,1],[-4,-1],[-1,-1],[0,-9],[1,-1],[-4,-1],[-1,3],[-3,1],[-1,3],[-1,0],[0,-2],[2,-4],[-2,0],[0,-2],[1,0],[-1,-3],[4,1],[0,-2]],[[582,506],[-1,1],[1,0],[0,-1]],[[591,504],[-1,2],[0,1],[2,-3],[-1,0]],[[648,848],[1,1],[0,-1],[-1,0]],[[450,812],[0,1],[1,0],[0,-1],[-1,0]],[[452,811],[0,1],[0,1],[1,0],[0,-2],[-1,0]],[[440,835],[1,3],[1,-2],[-1,0],[0,-1],[-1,0]],[[595,909],[-1,1],[-1,3],[1,-1],[1,-3]],[[598,888],[0,1],[-1,0],[0,1],[1,0],[0,-2]],[[597,898],[-1,2],[1,0],[0,1],[1,0],[1,-3],[-2,0]],[[380,945],[5,4],[1,0],[2,0],[4,-4],[3,-4],[0,-1],[0,-1],[-5,-6],[-1,-1],[-1,0],[-1,-1],[-4,-5],[0,-1],[-1,-2],[0,-1],[-1,-1],[-3,-3],[0,-1],[1,-7],[1,-1],[2,-4],[3,-3],[1,0],[0,-2],[1,0],[2,-6],[-1,-1],[0,-1],[0,-1],[2,0],[0,1],[1,0],[5,-3],[1,0],[3,-2],[2,-2],[2,-1],[0,-2],[-1,0],[-16,-6],[-3,-1],[-2,0],[-2,1],[-2,1],[-2,2],[-2,2],[-1,4],[-1,4],[-7,10],[0,1],[-1,20],[1,2],[14,23],[1,0]],[[392,893],[-1,0],[-1,0],[0,-1],[-1,0],[0,1],[-1,0],[1,0],[0,1],[1,-1],[1,1],[0,1],[1,0],[1,0],[0,1],[1,0],[-1,0],[2,1],[-1,0],[0,1],[1,0],[1,1],[1,0],[1,-1],[4,-1],[1,0],[-1,-1],[0,-1],[0,-1],[0,-2],[1,0],[0,-1],[0,-1],[-1,-1],[1,0],[0,-1],[0,-1],[-1,0],[0,1],[-1,1],[-2,1],[-1,0],[0,1],[-1,0],[0,-1],[-1,0],[1,0],[-1,0],[0,1],[-2,2],[-1,0],[-1,0]],[[626,540],[-1,0],[0,-1],[-1,0],[-1,0],[0,1],[-1,1],[1,0],[1,0],[1,0],[1,1],[0,-1],[1,0],[-1,-1]],[[556,918],[3,0],[4,-2],[2,-1],[0,-2],[2,-1],[4,1],[0,-3],[-1,0],[0,-3],[2,1],[0,2],[3,0],[5,-3],[0,-2],[-1,-3],[-2,1],[-1,-1],[2,-4],[1,-1],[-2,0],[0,1],[-2,0],[0,2],[-1,0],[0,-3],[-9,0],[-1,1],[-1,0],[0,1],[-1,-1],[0,1],[0,1],[-1,0],[1,1],[0,1],[0,1],[1,0],[0,1],[-1,0],[-1,1],[-1,0],[0,-1],[0,-1],[-1,0],[0,1],[-1,0],[-1,1],[-1,0],[0,2],[0,11]],[[687,897],[0,1],[1,0],[5,8],[3,-2],[-1,1],[1,0],[0,1],[2,0],[0,-3],[1,0],[0,3],[0,1],[5,2],[0,-1],[3,-1],[-1,2],[-1,0],[0,2],[-6,-1],[0,-1],[-6,-1],[0,4],[1,3],[1,0],[1,3],[0,1],[2,1],[4,1],[1,-3],[2,0],[0,-1],[2,1],[0,1],[-1,0],[1,1],[0,2],[-2,-1],[2,9],[5,1],[3,-1],[0,-4],[-1,0],[0,-1],[2,0],[0,-2],[1,0],[0,-2],[1,0],[0,3],[2,0],[0,-1],[1,0],[0,3],[-1,0],[0,1],[-1,0],[0,1],[-2,1],[0,2],[-1,0],[4,9],[1,0],[0,-3],[1,0],[5,-1],[0,3],[-3,0],[0,1],[-2,0],[1,5],[1,2],[4,2],[3,6],[2,0],[0,-2],[0,-2],[0,1],[2,-1],[0,-1],[2,0],[0,-1],[2,-2],[1,1],[-1,1],[-1,0],[0,2],[-2,0],[-1,7],[8,0],[1,-2],[1,0],[-1,-3],[-1,0],[0,-1],[2,1],[1,-3],[4,0],[0,-3],[2,1],[-1,3],[-4,0],[1,2],[-1,0],[1,4],[3,0],[2,-1],[0,1],[2,0],[-1,0],[-1,2],[-7,1],[0,2],[3,3],[0,2],[1,2],[1,0],[1,1],[5,2],[0,-2],[1,0],[0,-2],[5,1],[2,-1],[1,-2],[3,-1],[0,2],[-1,0],[0,4],[3,0],[0,1],[2,-1],[2,0],[2,-3],[1,-1],[1,-2],[1,0],[-2,5],[0,1],[7,1],[0,1],[12,4],[2,-2],[-1,2],[-12,-1],[-5,-3],[-2,1],[-3,-1],[-2,1],[1,2],[-3,0],[0,-1],[-1,0],[-1,-1],[-9,-1],[-1,2],[-1,0],[0,3],[2,3],[1,2],[2,0],[1,4],[1,0],[1,2],[1,0],[0,1],[3,-1],[0,1],[1,0],[1,1],[-3,1],[4,3],[0,1],[2,1],[0,1],[4,0],[0,-1],[4,3],[4,0],[0,1],[1,0],[1,2],[4,1],[-1,1],[-1,0],[0,-1],[-1,0],[-4,-1],[0,-1],[-6,-1],[0,-1],[-3,1],[1,4],[-1,-1],[-2,-2],[1,-1],[-1,0],[-1,-2],[-2,0],[0,-1],[-1,0],[0,-1],[-2,1],[-1,4],[-2,-3],[1,1],[0,-2],[1,-4],[-2,0],[0,-2],[-3,-1],[-2,-5],[-2,-1],[-3,1],[0,2],[-1,3],[-3,1],[-2,6],[2,1],[1,3],[1,1],[0,1],[-1,0],[0,5],[1,2],[2,2],[2,-1],[0,1],[4,0],[0,3],[-1,0],[0,-1],[-7,-1],[0,-2],[-1,0],[1,5],[-1,4],[3,0],[0,2],[-3,0],[-1,1],[155,0],[0,-127],[-221,0]],[[746,1024],[-1,-1],[2,-1],[0,-2],[3,-1],[0,-3],[-2,0],[2,-2],[0,-3],[-1,-2],[-1,0],[-1,-2],[1,0],[0,-2],[1,0],[1,-2],[-1,-1],[-3,-2],[-3,1],[-1,0],[0,-1],[1,-1],[0,-1],[4,1],[0,-2],[1,-1],[-1,-3],[2,0],[-1,-5],[-1,0],[2,-4],[-2,-1],[0,-1],[4,1],[3,1],[-1,-3],[0,-4],[-7,-2],[0,-2],[-1,-1],[-2,-4],[-8,2],[0,4],[-1,-1],[1,-2],[-4,-2],[-1,-2],[-1,0],[-1,-4],[-1,-1],[-2,2],[0,1],[-3,0],[0,-6],[0,-2],[-3,-1],[0,-4],[-2,0],[0,-2],[-4,-1],[1,-4],[-1,-3],[-3,1],[0,2],[-1,0],[0,-3],[2,-1],[-1,-1],[-3,-1],[0,-1],[-4,0],[-1,-2],[-9,-2],[-3,1],[-2,1],[0,1],[-2,0],[3,5],[1,0],[1,2],[4,3],[1,4],[-1,0],[0,-2],[-3,-2],[0,-1],[-1,1],[0,3],[0,-1],[-1,0],[0,-2],[-2,-1],[0,-1],[-2,-1],[0,3],[-2,2],[-1,0],[-1,3],[-5,-1],[-1,5],[-1,0],[1,2],[3,1],[0,-1],[1,0],[-1,2],[3,4],[5,1],[1,1],[1,0],[0,1],[1,0],[2,4],[5,1],[0,1],[1,0],[-1,-2],[1,0],[3,1],[1,2],[4,1],[1,1],[1,0],[3,-1],[1,0],[-5,3],[0,-1],[-8,-2],[0,1],[-2,0],[1,3],[-4,1],[0,-2],[1,0],[1,-4],[-6,-1],[-1,1],[-1,0],[0,-1],[1,0],[-1,-3],[-3,-2],[-1,0],[0,1],[-1,0],[0,-2],[-1,2],[-2,1],[0,-2],[-2,0],[0,-1],[1,0],[0,-3],[-3,-1],[0,-1],[-3,-1],[-2,-4],[-1,0],[0,2],[-1,0],[-1,1],[-1,0],[2,-5],[2,0],[2,-4],[-1,-1],[-1,2],[-1,0],[1,2],[-1,0],[-6,0],[-2,-1],[0,6],[-2,0],[1,8],[3,0],[0,1],[-2,0],[1,2],[-2,0],[-1,-2],[-1,-1],[-1,1],[-1,-1],[-3,1],[0,5],[-1,1],[1,0],[0,3],[1,1],[1,6],[1,0],[0,1],[1,0],[0,1],[3,-1],[-1,2],[1,0],[0,2],[3,3],[1,0],[1,-2],[1,0],[0,-1],[3,-1],[0,1],[-1,1],[-1,0],[0,1],[-1,0],[-1,5],[1,3],[1,1],[2,-1],[5,1],[0,2],[2,0],[0,1],[4,1],[0,1],[1,0],[0,-1],[3,-1],[1,3],[6,0],[-1,2],[-5,0],[-2,1],[-1,1],[1,1],[3,2],[0,1],[4,0],[0,1],[-4,2],[0,1],[3,2],[0,1],[1,-1],[1,1],[1,0],[1,1],[-2,1],[1,1],[53,0]],[[689,1024],[1,-1],[-2,-3],[-3,0],[0,-4],[-1,-1],[-1,1],[-1,3],[-1,0],[0,-5],[1,0],[0,-3],[-3,-1],[0,1],[-1,0],[1,-3],[-5,-1],[0,-1],[-1,0],[-2,-1],[-2,3],[-2,1],[-1,-3],[1,-1],[-6,0],[0,-2],[3,-2],[-3,-1],[0,-1],[-3,1],[0,-3],[-3,0],[0,-3],[-1,0],[0,-1],[-3,0],[-1,2],[-1,0],[-1,1],[-1,0],[0,-4],[4,-3],[0,-3],[-1,0],[0,-2],[1,0],[0,-1],[-2,-1],[0,-1],[-2,-1],[0,-1],[-1,0],[-1,2],[-3,5],[4,11],[-1,4],[3,0],[0,2],[1,1],[-2,0],[0,-2],[-1,0],[-1,4],[-1,0],[2,3],[0,2],[2,5],[2,1],[0,2],[1,0],[1,5],[5,0],[0,-1],[2,1],[30,0]],[[122,930],[0,1],[0,-1]],[[122,932],[-1,0],[0,-1],[-1,1],[0,1],[-1,-1],[-1,-1],[0,-1],[1,0],[-1,-1],[0,1],[-1,0],[-1,1],[1,1],[0,1],[-1,0],[0,1],[0,1],[1,0],[0,1],[0,1],[1,0],[1,1],[1,1],[-1,1],[1,0],[1,1],[0,1],[-1,0],[0,1],[0,1],[1,0],[0,1],[0,1],[-1,0],[0,1],[0,1],[-1,0],[0,1],[1,1],[1,0],[1,1],[0,-19]],[[171,1024],[0,-12],[-50,0],[0,12],[50,0]],[[207,1024],[1,0],[0,-1],[1,0],[0,-1],[1,0],[0,-1],[-1,0],[1,0],[-1,0],[0,-1],[0,-1],[-1,0],[0,1],[-1,1],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[0,-1],[0,-1],[0,-1],[1,-1],[1,0],[1,0],[0,-1],[0,-1],[-1,0],[1,0],[-38,0],[0,12],[37,0]],[[557,979],[-1,-1],[1,-2],[0,-12],[-1,-6],[-4,1],[0,1],[-2,0],[0,2],[-1,0],[0,-2],[2,-3],[0,-1],[3,0],[-1,-9],[-1,0],[0,-1],[-1,0],[1,-1],[3,-3],[1,-2],[-1,-2],[-2,0],[2,-3],[-1,-3],[-2,1],[0,1],[-1,0],[2,-5],[1,0],[0,-1],[3,-2],[0,-4],[0,1],[-2,0],[1,-1],[-2,0],[0,1],[-2,0],[1,-4],[2,0],[2,-1],[0,-13],[-1,0],[0,2],[-1,1],[-1,1],[-1,0],[-1,0],[0,1],[-1,1],[-1,0],[-1,0],[0,-1],[0,1],[0,1],[-1,-1],[0,-1],[0,-1],[0,-1],[-1,0],[0,1],[-1,0],[0,1],[-1,0],[0,1],[-2,0],[0,1],[0,1],[-1,0],[-1,-1],[0,-1],[1,-1],[0,-1],[0,-1],[1,0],[1,-1],[1,-1],[0,-1],[0,-1],[0,-1],[1,1],[1,0],[1,0],[1,0],[1,0],[1,-1],[2,-1],[0,-1],[0,-1],[-1,0],[0,-1],[1,0],[1,0],[1,-1],[-1,-1],[-1,0],[-18,0],[0,1],[1,0],[0,1],[1,0],[-1,1],[-1,1],[0,1],[0,1],[0,1],[0,2],[-1,0],[-1,-1],[0,-1],[0,-1],[0,-1],[0,-3],[0,-1],[0,-1],[-1,0],[-2,0],[-17,0],[1,1],[-1,0],[-1,1],[0,1],[0,1],[0,1],[-1,0],[0,1],[0,1],[0,1],[-1,0],[0,-1],[-1,-1],[0,-1],[1,0],[-1,-1],[0,-1],[0,-1],[0,-1],[1,-1],[-16,0],[2,1],[1,2],[-1,0],[1,1],[0,1],[1,1],[0,1],[-1,0],[1,1],[0,1],[0,1],[1,2],[1,1],[0,1],[1,0],[1,1],[0,1],[1,3],[0,1],[0,1],[0,1],[0,1],[0,1],[1,0],[1,0],[0,-1],[1,0],[0,-1],[-1,-1],[0,-2],[0,-1],[0,-1],[1,0],[1,0],[0,1],[0,1],[0,1],[0,1],[1,0],[1,0],[1,1],[1,0],[0,1],[0,1],[1,0],[0,1],[0,1],[1,0],[1,1],[1,2],[1,0],[1,0],[0,-1],[1,0],[0,-1],[1,0],[1,0],[0,-1],[-1,-1],[-1,0],[0,-1],[1,0],[1,0],[1,0],[0,1],[1,1],[0,1],[0,1],[-1,0],[0,1],[-1,0],[1,1],[0,1],[1,0],[0,1],[1,0],[0,1],[1,-1],[1,0],[0,-1],[1,0],[1,0],[1,-1],[1,0],[1,0],[-1,-1],[0,-1],[1,0],[0,1],[1,0],[1,-1],[0,1],[0,1],[0,1],[0,2],[0,1],[1,0],[1,-1],[0,1],[0,2],[1,1],[1,0],[0,-1],[1,0],[0,-1],[1,0],[0,-1],[0,-1],[1,0],[0,-1],[0,1],[1,1],[0,1],[0,2],[-1,0],[-1,1],[0,1],[0,1],[-1,1],[0,1],[0,1],[0,1],[1,0],[0,1],[0,1],[1,0],[0,1],[1,1],[0,1],[1,0],[1,1],[0,1],[0,1],[0,1],[1,0],[1,0],[0,1],[0,1],[-1,1],[0,1],[0,1],[-1,1],[1,1],[0,2],[-1,1],[1,1],[0,1],[0,1],[0,1],[-1,1],[0,1],[1,2],[0,1],[0,1],[1,0],[-1,1],[1,1],[1,0],[0,1],[1,1],[1,0],[1,1],[0,1],[-1,0],[0,1],[-1,1],[0,1],[0,1],[1,1],[0,1],[-1,0],[1,1],[1,0],[0,1],[0,1],[1,0],[0,1],[0,1],[-1,0],[0,1],[1,0],[0,1],[0,1],[-1,0],[0,1],[1,0],[0,1],[0,1],[-1,0],[0,1],[-1,0],[-1,0],[0,1],[1,1],[0,1],[1,0],[1,1],[0,1],[0,1],[1,0],[1,0],[1,0],[0,-1],[1,0],[0,1],[1,0],[0,1],[1,0],[0,1],[1,1],[1,1],[0,-25]],[[557,1005],[0,1],[0,1],[0,1],[-1,1],[1,1],[0,1],[-1,0],[0,1],[-1,0],[0,1],[0,1],[0,1],[-1,0],[0,1],[-1,0],[0,1],[0,1],[-1,0],[0,-1],[0,-1],[1,0],[0,-1],[0,-1],[0,-1],[-1,0],[-1,-1],[-1,0],[-1,-1],[-1,0],[0,-1],[1,1],[1,0],[1,0],[1,0],[1,0],[1,0],[0,-1],[1,-1],[0,-1],[0,-1],[0,-1],[0,-1],[0,-1],[-1,0],[0,-1],[-1,0],[-1,-1],[-1,0],[0,1],[-1,0],[-1,-1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,0],[-1,1],[-1,1],[-1,0],[-1,0],[-1,0],[1,0],[1,-1],[1,-1],[0,-1],[1,-1],[1,0],[0,-1],[-1,-1],[-1,0],[-1,0],[0,-1],[1,0],[1,0],[1,-1],[2,-6],[-3,0],[0,-6],[-2,1],[-1,0],[0,1],[-2,0],[4,-5],[0,-1],[-3,-1],[0,-1],[-1,-3],[-1,0],[-1,4],[-2,4],[-2,0],[-2,4],[-2,1],[0,1],[-2,0],[1,1],[-1,2],[-2,0],[0,-1],[-2,0],[0,1],[1,0],[-1,2],[-1,0],[-1,-4],[-2,0],[-2,5],[-1,0],[0,2],[-1,4],[1,2],[1,0],[0,1],[-3,0],[-1,9],[-2,0],[0,-1],[2,0],[-1,-8],[2,-2],[-1,0],[0,-4],[-1,0],[1,-1],[0,-4],[2,0],[1,-2],[0,-3],[-2,0],[1,-2],[4,2],[1,-3],[4,2],[2,-4],[1,0],[-1,-3],[5,-2],[0,-1],[1,0],[1,-6],[2,-4],[0,-3],[3,-3],[-2,-4],[-1,0],[0,1],[-4,-2],[2,-1],[-1,-2],[-1,0],[1,-4],[-1,-5],[-1,-1],[-3,-1],[-1,-3],[-3,0],[-5,-1],[0,1],[1,0],[1,2],[1,0],[0,2],[-3,-2],[0,1],[-1,5],[1,2],[3,2],[2,0],[2,5],[-1,0],[-1,-2],[-3,1],[0,1],[2,0],[-1,3],[2,0],[-1,5],[-3,-7],[-1,-1],[0,-1],[-1,0],[0,5],[-1,1],[-1,7],[-1,0],[-1,-4],[1,-7],[-2,0],[-1,1],[0,-2],[2,-1],[1,-6],[-3,-1],[0,1],[-1,0],[-4,7],[-2,0],[0,2],[-2,1],[1,2],[0,8],[-3,-1],[0,-1],[-1,3],[-1,0],[0,3],[-1,0],[2,-8],[-4,1],[-1,2],[-1,0],[-1,-4],[-2,1],[0,-1],[1,-1],[3,1],[0,-1],[3,0],[1,-5],[1,-5],[2,-3],[3,-1],[0,-2],[5,-4],[1,-1],[0,-1],[1,0],[-1,-2],[-2,0],[-2,3],[-1,0],[0,1],[-1,0],[-1,2],[-1,0],[0,-3],[-2,-1],[0,1],[-2,0],[-1,3],[-1,0],[0,1],[-1,0],[0,-1],[0,-1],[-1,0],[-2,6],[1,-8],[1,0],[3,-7],[4,2],[2,-1],[0,-4],[-2,-2],[-1,0],[-3,-2],[-1,3],[-4,1],[0,1],[-2,0],[0,1],[-3,0],[0,5],[-2,0],[-2,3],[1,2],[-2,1],[-1,3],[-3,-1],[0,-1],[1,0],[2,-4],[-1,0],[2,-5],[-1,0],[0,-1],[2,-3],[0,-4],[1,-1],[0,-5],[-2,-1],[1,-2],[-3,1],[-1,-1],[-1,0],[-3,0],[0,2],[1,0],[-1,5],[2,0],[-1,2],[-2,0],[-1,3],[-1,0],[-1,-5],[-2,0],[2,-2],[1,-2],[-1,-1],[-1,-5],[2,-2],[-1,-3],[4,1],[0,-4],[-1,0],[0,-2],[-1,0],[0,-2],[-2,-1],[0,-1],[3,1],[3,-1],[0,-2],[-37,0],[-1,1],[2,1],[-1,1],[2,1],[0,1],[1,0],[-1,6],[1,-1],[1,2],[1,-1],[-1,-1],[3,0],[1,1],[-1,1],[-2,1],[2,1],[0,-1],[3,1],[0,-2],[2,-6],[2,-3],[4,1],[-4,1],[-1,9],[4,1],[0,1],[1,0],[1,1],[0,4],[-4,0],[1,1],[3,0],[1,2],[-4,1],[0,1],[-2,1],[2,1],[-2,0],[-2,1],[-1,5],[-3,2],[2,2],[2,1],[1,2],[1,0],[-1,-1],[2,-2],[1,0],[1,-2],[6,1],[2,-1],[1,4],[-2,6],[0,4],[2,1],[0,2],[1,0],[0,1],[1,0],[3,-1],[0,1],[-2,1],[-1,1],[2,6],[1,1],[1,1],[1,1],[0,2],[1,0],[2,2],[1,0],[1,3],[1,0],[1,2],[1,0],[2,5],[3,35],[1,-1],[1,1],[1,1],[1,4],[1,0],[1,0],[2,8],[64,0],[0,-19]],[[556,927],[3,-2],[-1,-4],[-1,0],[0,2],[-1,0],[0,4]],[[390,924],[0,1],[1,0],[0,1],[0,1],[0,-1],[1,0],[-1,-1],[0,-1],[-1,0]],[[682,926],[-4,7],[-4,2],[0,1],[-1,0],[0,1],[-2,0],[2,8],[4,0],[1,-1],[1,-2],[1,-2],[0,-1],[-1,0],[1,-6],[3,-2],[0,-1],[1,-3],[-2,-1]],[[392,917],[-2,1],[0,1],[0,1],[0,1],[1,0],[0,1],[1,0],[0,-1],[0,-1],[0,-1],[1,0],[0,-1],[0,-1],[-1,0]],[[914,62],[-5,2],[-2,5],[7,2],[0,-9]],[[730,502],[0,-1],[-3,1],[3,0]],[[727,502],[-1,-1],[-2,0],[0,-1],[-2,-1],[-3,1],[1,2],[1,0],[6,0]],[[914,141],[-1,-3],[0,-7],[-6,-19],[-16,-11],[-20,-10],[-10,-17],[-4,-7],[-12,-6],[0,-3],[15,0],[15,-13],[13,-16],[5,-13],[-7,-11],[-9,-5],[-61,0],[0,1],[-5,0],[0,-1],[-1,0],[-1,0],[-3,0],[2,1],[1,4],[1,0],[0,1],[-1,0],[-1,2],[2,0],[1,2],[3,-2],[1,3],[4,-1],[0,1],[-5,2],[1,2],[-3,0],[-10,-2],[-2,2],[-5,-4],[-6,5],[3,9],[-5,11],[-5,-2],[-2,-3],[-8,-5],[-7,10],[12,5],[2,4],[-2,8],[-3,0],[-1,-6],[-3,0],[-4,8],[1,5],[-5,0],[-2,-9],[-5,-3],[-1,3],[-1,1],[-2,2],[-2,1],[-3,0],[-3,-1],[2,-8],[-2,-9],[-2,-5],[1,-6],[12,-11],[-2,-2],[-9,5],[-11,-2],[-5,-7],[-1,-2],[-5,4],[-2,-2],[0,-4],[-1,-5],[-2,0],[1,12],[-2,6],[1,4],[14,15],[0,14],[2,0],[1,-2],[3,0],[0,1],[5,4],[-2,3],[-1,4],[3,2],[1,4],[-4,2],[-11,5],[0,2],[-4,1],[0,-3],[-2,-4],[-8,3],[-8,5],[-11,2],[-8,11],[-4,2],[-1,4],[2,2],[3,-3],[3,-5],[5,2],[8,-1],[-1,7],[-5,15],[-6,-4],[-7,9],[2,8],[-6,15],[-12,17],[-19,9],[-11,14],[-7,-6],[-3,-2],[-3,0],[-4,-2],[-2,0],[-2,-1],[1,3],[-2,7],[1,2],[-1,2],[2,-1],[3,2],[0,1],[1,0],[0,3],[-1,1],[1,0],[-1,3],[1,0],[1,3],[1,0],[-1,1],[1,0],[0,2],[-1,1],[292,0],[0,-60]],[[603,201],[-7,-5],[2,-20],[-4,-4],[7,-18],[1,-7],[-13,-9],[-12,13],[-7,27],[-4,-1],[0,-2],[-8,2],[-4,5],[-11,9],[-2,-3],[-4,3],[-4,9],[0,1],[70,0]],[[623,199],[0,1],[-1,1],[-1,5],[-1,0],[0,1],[2,1],[-1,1],[1,0],[0,4],[-3,6],[2,-1],[0,2],[-2,0],[0,-2],[-1,0],[-1,2],[-2,1],[0,1],[-3,1],[-2,3],[-1,0],[0,1],[-9,0],[-5,-7],[9,-19],[-3,-2],[-67,0],[-1,1],[-4,4],[0,9],[-1,3],[-2,4],[-1,0],[-1,2],[-2,0],[1,0],[-1,1],[1,0],[0,2],[1,0],[0,3],[2,3],[-1,1],[0,3],[1,0],[1,12],[-1,4],[-2,2],[1,3],[-2,2],[-1,9],[-3,2],[0,-1],[-1,1],[1,0],[-15,9],[4,6],[-3,1],[0,2],[-1,0],[-1,3],[0,4],[-1,2],[-1,3],[-2,0],[-1,3],[-2,2],[-1,7],[-2,5],[-1,0],[-2,5],[-1,0],[-1,3],[-1,1],[-3,5],[-1,0],[-2,0],[1,1],[-2,1],[0,-2],[-1,0],[0,6],[-2,6],[-4,2],[0,1],[-1,0],[0,2],[-2,-1],[-1,2],[-1,0],[-1,1],[-1,1],[0,2],[-1,0],[-2,4],[-4,9],[-2,1],[-4,7],[-1,0],[-2,4],[1,0],[0,7],[-3,5],[1,5],[1,1],[-1,4],[2,-1],[0,-1],[3,0],[1,-5],[3,-1],[0,-3],[2,0],[0,6],[-1,1],[1,3],[-1,0],[1,1],[0,1],[-1,0],[0,2],[-2,0],[1,2],[1,0],[1,0],[0,-1],[1,0],[0,1],[2,0],[0,2],[-1,0],[1,1],[-1,0],[0,3],[1,-1],[-1,2],[-5,3],[0,1],[1,0],[-1,2],[-2,0],[0,4],[9,0],[0,-2],[2,0],[0,-1],[6,0],[1,-3],[1,0],[2,-3],[2,0],[0,-2],[1,0],[0,-1],[2,-1],[1,2],[1,0],[0,3],[-2,1],[0,3],[6,1],[0,-1],[1,0],[1,2],[2,0],[-1,2],[1,1],[0,-1],[3,1],[2,3],[4,0],[8,1],[1,2],[3,1],[1,-1],[0,1],[3,0],[1,0],[-1,-2],[0,1],[-1,0],[0,-2],[-1,0],[-2,-5],[-1,0],[2,-4],[0,-4],[1,-1],[0,5],[2,1],[6,-1],[0,-2],[1,0],[0,-1],[-2,1],[1,-3],[-1,1],[-1,-1],[0,-6],[-3,-1],[-3,-15],[-1,0],[1,3],[-1,0],[-1,-4],[-1,0],[0,-1],[-1,0],[0,-2],[0,-1],[-1,2],[1,2],[-1,0],[1,2],[-1,5],[-1,-6],[-1,1],[0,-8],[-1,-1],[0,-3],[2,0],[0,-1],[-1,0],[1,-3],[-1,0],[0,-1],[-3,0],[0,-3],[-1,0],[0,-1],[-3,2],[0,2],[-2,4],[-1,0],[1,1],[-2,0],[0,1],[-1,0],[0,1],[-1,0],[0,1],[-2,1],[0,1],[-1,0],[0,1],[-1,1],[-1,7],[-1,0],[0,-7],[1,0],[0,-2],[2,-1],[2,-5],[2,0],[1,-3],[1,0],[0,-4],[2,-1],[-1,-2],[2,0],[1,-1],[4,1],[0,-1],[1,0],[0,-1],[0,-4],[1,0],[0,-4],[0,-2],[6,-7],[7,3],[-2,1],[-2,1],[-2,4],[1,1],[-2,8],[0,-1],[-1,1],[1,0],[1,3],[-1,2],[1,0],[1,2],[1,0],[-1,0],[0,3],[2,0],[-1,2],[1,0],[2,7],[-1,-1],[1,2],[2,5],[0,2],[3,0],[0,1],[1,0],[0,4],[3,1],[-1,2],[1,0],[1,1],[-1,0],[0,1],[1,1],[1,-1],[0,3],[4,2],[0,4],[9,4],[0,1],[1,1],[0,-2],[3,1],[3,-8],[2,-1],[-1,-2],[1,-5],[1,0],[0,3],[1,0],[-1,2],[2,1],[2,-2],[1,2],[2,0],[0,1],[1,0],[1,1],[-1,-1],[-3,1],[1,4],[-3,0],[0,3],[1,0],[0,3],[-1,0],[-1,7],[-4,-1],[-1,1],[1,3],[1,3],[1,0],[0,2],[2,0],[2,5],[0,2],[4,8],[1,0],[1,3],[1,0],[3,6],[1,1],[4,6],[2,0],[0,1],[5,1],[1,-4],[-1,-1],[-4,0],[0,-1],[2,-1],[0,-2],[1,0],[2,0],[1,0],[-2,-1],[0,-2],[-2,0],[0,-1],[1,0],[0,-1],[3,-2],[0,-1],[-1,0],[1,-2],[-1,0],[0,-3],[2,-1],[0,-1],[-1,0],[0,-1],[4,-1],[0,-2],[1,0],[0,-5],[2,-2],[0,10],[-1,4],[0,3],[-1,0],[1,3],[-1,3],[1,7],[2,1],[2,2],[1,4],[2,2],[0,-1],[4,0],[2,1],[0,-2],[2,-1],[0,-2],[0,-5],[-1,-2],[-1,0],[0,-2],[0,-2],[2,0],[1,1],[0,-1],[2,0],[2,-4],[-1,-1],[1,-9],[-1,0],[3,-5],[1,3],[-1,0],[-1,1],[3,0],[0,3],[0,2],[4,1],[6,1],[4,-2],[1,2],[0,1],[-2,0],[1,3],[0,2],[-1,0],[0,4],[-1,2],[-3,0],[1,2],[2,9],[-2,4],[-1,0],[0,1],[-4,1],[-1,5],[-2,-1],[-3,11],[-1,-1],[0,6],[0,-1],[6,-1],[2,1],[-1,-5],[2,-2],[1,-6],[3,-3],[2,-1],[0,-1],[1,-1],[4,0],[6,2],[0,-2],[-2,-1],[0,-3],[-1,0],[-1,-3],[-1,0],[0,-1],[2,-1],[0,1],[3,2],[2,0],[0,-1],[0,-3],[0,-1],[3,1],[-1,2],[4,0],[-1,-3],[2,-1],[0,2],[5,3],[0,-1],[-1,0],[0,-3],[2,-1],[-2,-1],[-1,-3],[2,1],[-2,-8],[1,0],[2,4],[2,1],[0,1],[2,1],[1,-1],[0,3],[-2,1],[0,2],[-1,2],[3,1],[1,0],[4,3],[1,-2],[3,0],[2,3],[3,0],[1,1],[1,-2],[-1,-1],[0,-3],[0,-1],[-2,0],[1,-2],[-2,-1],[2,0],[1,0],[0,-3],[2,1],[0,1],[2,-1],[1,-3],[-3,0],[0,-1],[2,0],[0,-1],[-3,-1],[1,0],[0,-1],[-1,0],[0,-2],[2,1],[0,-2],[-1,0],[0,-5],[-2,0],[1,-2],[3,-1],[0,-1],[-2,-1],[0,-1],[-3,0],[-3,-7],[-1,0],[2,0],[0,1],[3,1],[0,1],[5,2],[2,-2],[0,-2],[2,0],[0,-2],[-3,0],[0,-1],[2,0],[0,-1],[1,0],[0,2],[2,0],[0,-2],[1,0],[1,1],[2,1],[0,-1],[2,0],[0,-2],[-1,0],[0,-1],[4,0],[-1,2],[7,-1],[0,-1],[3,-2],[0,-1],[3,-2],[-3,-4],[2,1],[1,2],[3,-1],[0,1],[1,0],[-1,4],[-1,0],[0,-1],[-1,0],[0,2],[-3,0],[0,1],[-2,1],[1,2],[-1,1],[-2,0],[0,1],[-3,0],[0,2],[-1,0],[0,-2],[-1,0],[0,1],[-1,-1],[-2,1],[-1,1],[-2,1],[-3,0],[-1,3],[-2,0],[0,5],[-2,1],[0,3],[3,-1],[0,2],[2,0],[0,1],[-2,1],[-3,1],[0,1],[1,1],[2,3],[3,-1],[2,2],[-2,0],[2,2],[4,2],[-1,3],[-4,-2],[-2,2],[-2,0],[0,-1],[-2,0],[-1,3],[-2,0],[0,3],[1,0],[3,4],[0,4],[1,-1],[4,0],[0,-1],[8,2],[0,-2],[1,1],[1,1],[1,0],[0,1],[1,0],[0,2],[2,0],[2,2],[1,-1],[1,-1],[0,-1],[-1,-1],[0,-2],[0,-1],[0,-1],[0,-1],[2,-1],[0,-1],[-1,0],[0,-1],[1,0],[-1,-4],[2,1],[1,-4],[1,0],[0,-1],[1,0],[0,2],[-2,1],[0,7],[-2,4],[4,-1],[0,1],[3,1],[0,-1],[2,0],[0,1],[2,-1],[2,-1],[1,1],[1,1],[1,2],[1,0],[0,2],[0,-3],[1,-1],[-1,0],[0,-1],[1,-3],[0,-3],[-1,0],[1,-2],[0,-1],[1,-1],[-1,-1],[1,0],[1,0],[-1,-2],[1,0],[0,-1],[0,-1],[2,0],[-1,-2],[1,-1],[0,-1],[1,-2],[0,1],[0,2],[0,1],[0,1],[1,0],[-1,1],[0,1],[-1,1],[-1,1],[0,1],[1,0],[-1,3],[-1,0],[0,1],[1,2],[0,1],[2,2],[2,1],[1,1],[1,-1],[1,-1],[-1,-1],[4,1],[1,1],[1,-2],[1,0],[1,1],[2,-1],[1,0],[1,1],[1,-3],[1,0],[0,-1],[-1,-2],[1,0],[0,1],[1,0],[0,1],[1,1],[2,1],[1,-1],[2,1],[1,0],[1,1],[1,1],[-1,0],[-1,0],[-1,-1],[-1,0],[-2,0],[-1,0],[-1,0],[-1,-1],[-2,2],[1,1],[0,1],[-2,0],[-1,-1],[-1,0],[-1,1],[-1,0],[-1,-1],[-1,3],[-1,0],[-1,1],[-1,-2],[-1,0],[-1,0],[-1,1],[-1,1],[-1,0],[-1,-1],[-1,-1],[0,-1],[-2,-1],[1,7],[-1,1],[-1,0],[1,4],[-1,1],[0,3],[-1,0],[0,3],[1,0],[1,2],[3,0],[0,1],[2,0],[-1,-1],[2,0],[6,0],[0,1],[2,-1],[0,2],[1,2],[1,0],[174,0],[0,-303],[-291,0]],[[738,502],[-1,0],[-1,0],[0,-1],[-5,0],[0,1],[7,0]],[[718,502],[-1,0],[1,-4],[2,0],[-1,-4],[-1,1],[2,-4],[0,-2],[-3,0],[0,-3],[-2,0],[0,-1],[-2,0],[-2,2],[-1,1],[-1,2],[0,1],[0,1],[0,1],[0,2],[-1,-2],[-1,-2],[1,0],[-1,-1],[0,-2],[1,0],[0,-1],[-3,1],[-2,-2],[0,2],[-3,0],[1,3],[-2,0],[0,2],[-1,0],[1,-6],[-5,0],[-1,-2],[-4,1],[1,2],[0,1],[0,5],[-2,-1],[1,-2],[-3,0],[0,-1],[0,-1],[1,0],[-1,-6],[-2,0],[0,1],[-4,0],[0,1],[-1,0],[0,1],[1,1],[-2,1],[1,2],[-1,1],[-3,0],[1,-1],[0,-7],[-1,1],[1,2],[-3,0],[-1,0],[-1,0],[0,1],[-1,0],[1,-1],[-1,1],[-2,0],[1,-2],[1,0],[0,-1],[1,0],[0,-1],[2,1],[1,-5],[-6,1],[0,-1],[-2,0],[0,1],[-3,0],[0,-1],[-2,0],[-2,3],[-2,-2],[-3,0],[0,-1],[-2,1],[-3,-1],[0,-1],[-2,2],[-3,0],[0,6],[1,4],[0,1],[1,0],[-1,1],[1,3],[-2,0],[-2,-5],[-1,-1],[-2,0],[0,1],[-1,0],[0,-1],[-1,0],[-1,0],[0,-1],[-2,1],[0,1],[-1,0],[1,1],[0,1],[-2,0],[1,5],[3,0],[0,2],[1,0],[0,1],[-2,0],[0,1],[0,1],[83,0]],[[566,502],[1,0],[3,-4],[1,0],[0,-2],[-2,0],[0,1],[-1,0],[0,-1],[-2,1],[0,1],[-4,2],[-1,2],[5,0]],[[544,502],[-2,-1],[0,1],[2,0]],[[327,265],[1,-1],[1,-2],[1,-1],[0,-3],[1,-2],[0,-2],[1,-1],[0,-1],[3,-3],[2,-3],[1,-2],[1,-1],[2,-3],[6,-14],[9,-7],[0,-1],[21,-6],[0,-1],[0,-1],[0,-1],[0,-1],[-2,0],[-1,-1],[-1,-1],[-2,-2],[-1,-1],[-1,-2],[-2,-1],[-1,-2],[-1,-2],[0,-1],[-1,-2],[0,-2],[-1,-1],[0,-1],[0,-1],[0,-1],[1,-1],[0,-1],[0,-1],[0,-1],[1,-1],[0,-1],[0,-1],[1,-1],[-1,0],[1,-1],[1,0],[-1,-1],[0,-1],[1,-1],[0,-2],[0,-1],[1,-1],[1,-1],[0,-1],[1,-1],[-1,-2],[0,-1],[0,-1],[-1,-1],[-1,-1],[0,-1],[-1,-1],[-1,-2],[0,-1],[-1,-2],[-1,-1],[-1,-1],[-1,-2],[-2,-2],[0,-1],[-1,0],[0,-1],[-1,-1],[0,-1],[-1,0],[-1,-1],[-1,-2],[-2,-1],[0,-1],[-1,-1],[0,-1],[-1,0],[0,-1],[-1,-1],[0,-1],[-1,0],[0,-1],[-1,-1],[0,-1],[-1,0],[-1,-2],[-1,-1],[0,-1],[-1,-1],[-1,-1],[0,-1],[-1,0],[0,-1],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[0,-1],[-1,0],[0,-1],[0,-1],[-1,0],[0,-1],[0,-1],[-1,0],[0,-1],[-1,-1],[0,-1],[0,-1],[-1,0],[0,-1],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,-1],[0,-1],[-1,0],[0,-1],[0,-1],[-1,0],[0,-1],[-1,-1],[0,-1],[-1,-1],[0,165]],[[327,59],[1,0],[1,0],[1,0],[1,0],[1,0],[1,0],[1,0],[1,0],[1,0],[1,0],[1,0],[1,0],[0,1],[1,1],[1,0],[0,1],[0,-1],[1,0],[1,0],[0,1],[1,0],[1,0],[1,0],[1,0],[0,1],[1,0],[0,1],[0,1],[1,0],[0,1],[0,1],[0,1],[1,0],[1,0],[1,0],[1,-1],[1,0],[1,0],[0,-1],[0,1],[1,0],[0,-1],[1,0],[2,-1],[1,0],[1,-1],[1,0],[1,-1],[1,0],[1,-1],[2,0],[1,-1],[1,-1],[1,0],[1,0],[1,-1],[1,0],[1,0],[0,-1],[1,0],[1,0],[0,-1],[1,0],[1,-1],[1,0],[1,-1],[0,-1],[1,-1],[1,0],[1,-1],[1,0],[1,-1],[1,0],[1,-1],[1,0],[1,0],[0,-1],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,0],[1,0],[0,-1],[-1,0],[0,-1],[-1,-1],[0,-1],[-1,0],[0,-1],[0,-1],[0,-1],[-1,0],[0,-1],[0,-1],[-2,-1],[-1,0],[0,-1],[0,-1],[-1,0],[-1,-1],[0,-1],[-1,0],[-1,-1],[0,-1],[-1,0],[-1,-1],[0,-1],[-1,-1],[-1,0],[0,-1],[-2,-1],[-1,-2],[-1,-1],[-1,0],[-1,-1],[0,-1],[-1,-1],[-2,-2],[-1,-1],[0,-1],[-1,-1],[0,-1],[-3,-4],[0,-1],[0,-1],[-1,-1],[0,-1],[-2,-4],[0,-1],[-28,0],[0,59]],[[804,380],[0,1],[2,0],[0,-1],[-2,0]],[[660,32],[0,1],[1,-1],[2,0],[-2,-2],[0,-1],[2,0],[0,-1],[-1,-1],[2,-6],[1,0],[1,-1],[0,-1],[0,-1],[1,-1],[-1,0],[0,-1],[3,-1],[-1,-1],[1,-6],[1,-1],[0,-5],[1,-1],[0,1],[1,0],[0,-2],[-2,0],[-1,3],[-1,7],[-1,-1],[-2,-1],[0,4],[-2,2],[0,3],[-1,5],[-1,0],[0,1],[-1,0],[1,-1],[-1,0],[0,-1],[1,0],[1,-3],[-1,-2],[1,1],[0,-2],[-2,0],[-1,5],[1,0],[-1,4],[1,1],[-2,4],[1,-4],[-1,-1],[0,1],[-1,0],[1,-3],[-1,0],[-3,6],[1,-3],[-1,4],[-1,0],[0,2],[1,0],[0,1],[-1,0],[0,1],[-1,6],[4,1],[1,-2],[-1,0],[0,-1],[1,0],[0,-1],[1,1],[1,-3],[-1,-1],[1,0],[1,0],[-1,0],[0,-1],[1,0]],[[657,0],[1,3],[0,1],[0,1],[1,0],[1,-5],[-3,0]],[[660,7],[0,1],[-2,0],[-1,13],[2,1],[0,-1],[-2,0],[0,-2],[1,0],[1,-1],[-1,-2],[1,0],[0,-5],[1,-4]],[[656,9],[0,1],[1,0],[-1,0],[0,-1]],[[615,65],[3,-5],[-1,1],[-5,2],[-2,0],[-1,1],[-1,0],[-1,1],[-1,1],[-3,3],[1,2],[-1,1],[0,2],[-1,1],[-1,0],[0,1],[-1,0],[-1,1],[1,3],[-1,3],[-1,4],[0,3],[-1,2],[-4,2],[2,2],[2,6],[0,1],[1,0],[-1,4],[-1,1],[-2,1],[1,3],[-1,1],[-1,0],[-1,4],[1,1],[1,1],[-1,1],[0,2],[0,1],[0,2],[0,2],[1,2],[0,3],[0,2],[1,3],[1,0],[1,2],[1,1],[1,1],[3,0],[4,-1],[0,-1],[-1,0],[1,0],[0,-1],[1,-1],[1,-1],[1,-1],[0,-2],[1,-2],[2,-1],[0,-2],[1,-1],[2,0],[1,-1],[1,1],[1,-1],[1,-1],[1,-1],[0,-1],[1,-1],[2,0],[1,-1],[0,-1],[-1,0],[-1,1],[-1,1],[-2,0],[-1,1],[-1,0],[-1,1],[-1,0],[-1,-1],[1,-1],[0,-1],[1,-1],[0,-1],[1,-1],[2,-1],[3,-6],[1,-1],[1,0],[1,-2],[1,-1],[-1,0],[0,-2],[1,0],[0,-1],[-1,1],[-1,0],[-1,1],[0,1],[0,3],[-1,0],[-1,1],[-1,1],[-1,0],[-1,3],[-1,0],[0,1],[-2,0],[-1,0],[-2,0],[-1,-1],[-1,1],[-1,1],[0,1],[-3,0],[0,-1],[1,0],[0,-1],[-1,0],[0,-2],[2,-1],[-1,-1],[0,-1],[1,0],[1,-1],[1,0],[1,-1],[0,-2],[1,0],[0,-1],[1,0],[0,-1],[1,-4],[1,-1],[-2,0],[0,-1],[-1,-1],[0,-1],[-1,-2],[-2,2],[-1,0],[0,-1],[1,-2],[1,-1],[0,-1],[2,-1],[0,-1],[1,-2],[0,-5],[-4,-1],[-2,3],[-1,0],[-4,6],[0,2],[-1,1],[-3,3],[-1,-1],[2,-2],[1,-3],[-1,-2],[1,-1],[1,-1],[0,-2],[1,-1],[-1,-1],[0,1],[-1,-1],[2,0],[2,-1],[-1,-1],[2,-3],[0,-1],[3,-1],[2,0],[3,-9],[1,0],[1,-2]],[[684,42],[0,1],[1,0],[0,-1],[-1,0]],[[590,500],[-1,2],[2,1],[0,-1],[0,-1],[0,-1],[-1,0]],[[578,493],[-3,1],[1,0],[2,0],[0,-1]],[[534,482],[-2,0],[-1,3],[-1,0],[-3,2],[0,3],[2,7],[0,2],[1,2],[1,0],[0,-1],[1,0],[1,-3],[2,-1],[1,-2],[1,0],[-2,-3],[-1,0],[0,-5],[-2,1],[-2,1],[-1,-2],[2,-1],[3,-3]],[[444,456],[1,4],[-2,2],[0,4],[1,0],[0,1],[2,0],[0,-1],[0,-1],[0,-8],[-2,-1]],[[637,37],[0,1],[0,-1]],[[510,366],[0,1],[1,0],[0,-1],[-1,0]],[[508,366],[0,1],[0,-1]],[[559,125],[-1,0],[0,2],[-1,0],[0,1],[1,-1],[2,1],[0,-1],[2,0],[1,-1],[-4,-1]],[[557,113],[0,1],[-1,1],[1,0],[1,-2],[-1,0]],[[440,429],[-2,5],[0,2],[1,0],[1,5],[2,1],[0,-2],[0,-1],[0,-1],[-1,0],[0,-6],[0,-3],[-1,0]],[[556,118],[-1,3],[-2,-1],[0,-1],[-1,0],[-1,3],[1,0],[-1,3],[-1,-2],[-1,0],[-1,2],[-1,0],[0,3],[3,0],[1,4],[1,-2],[1,-1],[0,-1],[4,-1],[-1,0],[0,-2],[-1,0],[1,-6],[1,-1],[-1,0]],[[688,37],[-3,2],[0,1],[-3,-1],[-1,1],[0,2],[1,0],[0,-2],[3,0],[-1,1],[2,0],[-1,-1],[2,0],[1,-3]],[[558,96],[1,12],[-1,2],[1,0],[0,1],[1,0],[1,-2],[2,0],[1,-3],[1,0],[2,-4],[-3,-2],[-1,-3],[-5,-1]],[[442,448],[0,1],[-2,0],[0,4],[-1,1],[2,0],[2,1],[0,-1],[-1,0],[0,-4],[1,0],[0,-1],[-1,-1]],[[628,54],[-1,-1],[-1,2],[-2,2],[2,0],[1,1],[1,-4]],[[679,97],[-3,0],[-4,0],[-5,-2],[-3,-1],[-2,-3],[0,-3],[-3,0],[-3,-2],[-3,-4],[-2,-1],[-4,1],[1,4],[0,3],[-2,6],[-2,3],[3,2],[1,2],[2,-2],[1,-3],[5,-1],[3,1],[2,2],[2,3],[2,1],[-1,2],[-1,3],[-1,4],[-1,1],[-2,-2],[-2,-1],[3,3],[1,1],[3,0],[1,0],[1,1],[1,1],[-1,3],[1,0],[3,-3],[1,0],[1,-1],[2,-1],[1,-2],[2,-4],[1,-3],[2,-1],[2,-4],[-3,-3]],[[957,0],[0,1],[-9,17],[-28,40],[-8,4],[0,9],[43,12],[31,13],[1,9],[37,0],[0,-105],[-67,0]],[[987,104],[2,19],[-7,17],[-11,33],[-30,8],[-8,9],[-3,-1],[-3,-7],[-1,-4],[-2,-1],[0,-1],[-1,-2],[-1,0],[-1,-1],[-2,-2],[-1,-2],[-2,-6],[0,-5],[0,-2],[2,-2],[3,0],[2,-1],[0,-1],[-2,-1],[-2,-1],[-4,-3],[-1,-3],[-1,-6],[0,-7],[-1,-1],[0,372],[112,0],[0,-398],[-37,0]],[[328,124],[0,-22],[0,-1],[-1,-1],[0,-1],[-1,0],[-1,-1],[0,-1],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[0,-1],[0,-1],[-1,0],[0,-1],[0,-1],[-1,-1],[0,-1],[-1,-1],[-1,-26],[1,0],[0,-1],[1,1],[-1,0],[1,0],[0,-1],[0,1],[1,0],[0,-1],[0,1],[0,-1],[1,0],[1,0],[1,0],[1,0],[1,0],[1,0],[1,0],[0,-59],[-224,0],[0,124],[224,0]],[[15,0],[0,1],[3,2],[0,4],[8,4],[1,4],[-1,0],[-1,-2],[-1,0],[0,1],[1,0],[0,1],[0,1],[-2,1],[0,2],[-3,3],[-3,0],[0,-1],[-2,-1],[-1,0],[0,3],[-3,-1],[1,2],[-1,1],[-8,0],[-3,1],[0,98],[106,0],[0,-124],[-91,0]],[[0,19]],[[0,17],[3,-1],[0,-2],[2,1],[7,-2],[-2,-5],[-1,0],[-2,-2],[-2,-6],[-4,0],[-1,0],[0,17]],[[181,515],[-2,-20],[0,-2],[0,-5],[3,-11],[1,-3],[0,-1],[10,-32],[1,-3],[1,-1],[0,-3],[1,-2],[1,-2],[0,-1],[1,-1],[0,-1],[2,-4],[4,-9],[4,-7],[8,-14],[1,-2],[5,-9],[1,0],[1,-2],[1,0],[-1,-1],[1,0],[3,-4],[1,-1],[1,-2],[2,-1],[5,-5],[1,0],[2,-2],[0,-2],[8,-4],[-1,0],[0,-1],[-1,0],[0,-1],[-1,0],[-1,0],[-1,-2],[0,-1],[1,1],[1,1],[1,1],[1,1],[1,-2],[1,-1],[2,-2],[2,-1],[5,-5],[-1,0],[0,-1],[-1,0],[1,-1],[1,-1],[2,-2],[1,-1],[1,-1],[1,0],[1,-1],[1,-1],[2,-2],[1,-1],[1,-1],[2,-2],[2,-2],[1,-1],[1,-1],[-1,-1],[-1,0],[-1,0],[0,1],[0,-1],[-1,0],[0,-1],[0,-1],[1,-2],[1,-2],[1,-1],[2,-3],[3,-2],[2,-3],[3,-1],[1,0],[2,-2],[2,-1],[0,-1],[1,-1],[0,-1],[2,-2],[1,0],[1,0],[5,-3],[0,-1],[-1,0],[1,-2],[1,-1],[1,0],[1,-1],[1,-3],[2,0],[3,-6],[4,-3],[0,-3],[2,-1],[0,-1],[2,-1],[1,-1],[2,-1],[1,0],[1,-1],[1,-1],[1,-2],[1,-3],[2,-1],[2,-2],[0,-141],[-328,0],[0,392],[181,0]],[[122,968],[0,1],[0,1],[0,1],[0,1],[0,1],[-1,0],[0,1],[0,1],[0,1],[-1,0],[0,1],[-1,0],[-1,0],[0,1],[0,1],[1,1],[0,1],[-1,0],[1,1],[-1,0],[0,1],[0,1],[0,1],[1,0],[1,1],[-1,0],[-1,0],[-1,-2],[-1,-1],[1,0],[-1,-1],[1,0],[1,-1],[-1,0],[-1,-1],[0,-1],[0,-1],[0,-1],[1,0],[0,-1],[1,0],[1,0],[0,-1],[0,-1],[-1,-1],[1,-1],[0,-1],[1,0],[0,-1],[0,-1],[0,-1],[0,-1],[1,-1],[1,-1],[0,-1],[0,-1],[0,-1],[0,-1],[-1,-1],[0,-1],[0,-1],[0,-1],[0,-1],[1,-1],[0,-1],[-1,-1],[-1,0],[0,-1],[-1,-1],[-1,-1],[0,-1],[0,-1],[0,-1],[1,-1],[0,-1],[-1,-1],[0,-2],[-1,-1],[0,-1],[-1,-1],[-1,-1],[-1,0],[0,-1],[0,-1],[-1,-1],[0,1],[0,1],[0,1],[1,0],[0,1],[0,1],[0,1],[0,1],[1,1],[1,1],[-1,0],[0,1],[-1,1],[0,1],[1,1],[0,1],[1,1],[-1,0],[-1,0],[-1,0],[0,-1],[0,-1],[-1,-1],[0,-1],[1,-1],[0,-1],[-1,-1],[-1,1],[0,-1],[0,-1],[0,-1],[1,0],[-1,-1],[0,-1],[0,-1],[0,-1],[0,-1],[0,-1],[0,-1],[-1,0],[0,-1],[1,-2],[0,-1],[-1,-1],[-1,0],[0,-1],[1,-1],[0,-3],[-1,0],[-1,-1],[1,-1],[3,-1],[0,1],[0,1],[0,1],[1,0],[1,-1],[4,-2],[-1,-9],[2,-8],[0,-1],[-96,0],[0,121],[99,0],[0,-56]],[[161,970],[1,0],[1,0],[0,-1],[0,1],[1,-1],[0,-1],[0,-1],[1,0],[0,-1],[-1,0],[1,0],[-1,0],[0,-1],[1,0],[-1,-1],[1,0],[0,-1],[0,-1],[1,0],[1,0],[-1,0],[-1,-1],[0,-1],[0,-1],[0,-1],[-1,0],[-1,0],[-1,1],[0,1],[-1,1],[0,-1],[0,-1],[0,-1],[1,-1],[-1,0],[-1,-1],[-1,0],[0,1],[0,1],[-1,0],[-1,1],[-1,0],[0,-1],[1,0],[0,-1],[-1,0],[-1,0],[-1,0],[-1,0],[-1,1],[0,1],[0,1],[-1,0],[0,1],[-1,0],[1,1],[-1,0],[0,1],[-1,0],[0,1],[-1,1],[0,-1],[0,-1],[1,-1],[0,-1],[0,-1],[1,0],[-1,0],[-1,1],[-1,0],[0,-1],[1,0],[0,-1],[0,-1],[1,0],[1,0],[0,-1],[0,-1],[1,0],[0,-1],[1,0],[1,0],[0,-1],[1,0],[1,1],[0,-1],[0,1],[1,-1],[0,1],[1,0],[1,0],[1,0],[0,-1],[0,1],[1,0],[1,0],[-1,0],[-1,0],[0,1],[1,0],[1,0],[1,1],[1,0],[1,0],[1,0],[0,1],[1,0],[1,-1],[-1,0],[0,-1],[0,-1],[-1,0],[-1,0],[-1,0],[-1,-1],[-1,0],[0,-1],[-1,0],[-1,-1],[-1,0],[0,-1],[-1,0],[0,-1],[0,-1],[0,-1],[0,-1],[1,0],[0,-1],[-1,0],[0,-1],[-1,0],[1,-1],[-1,0],[-1,0],[-1,-1],[0,-1],[-1,-1],[-1,0],[0,-1],[-1,0],[0,-1],[0,1],[-1,0],[0,1],[1,0],[0,-1],[0,1],[0,1],[-1,0],[-1,1],[1,0],[1,0],[0,1],[1,0],[1,1],[1,0],[-1,0],[-1,0],[0,-1],[-1,0],[0,1],[0,-1],[-1,0],[-1,-1],[-1,0],[-1,0],[0,-1],[-1,0],[-1,-1],[-1,0],[-1,0],[0,1],[1,1],[1,2],[0,1],[1,0],[-1,1],[0,1],[1,0],[0,1],[1,0],[0,1],[-1,1],[0,1],[-1,0],[0,-1],[0,-1],[-1,0],[-1,-1],[0,-1],[0,-1],[-1,0],[-1,1],[0,1],[0,1],[0,1],[-1,0],[-1,0],[0,1],[-1,0],[-1,0],[0,1],[0,-1],[1,-1],[-1,0],[1,-1],[0,-1],[1,0],[0,-1],[0,-1],[1,0],[0,-1],[1,0],[0,-1],[-1,-1],[0,-1],[-1,0],[0,-1],[2,0],[-1,-1],[0,-1],[-1,0],[-1,0],[0,1],[-1,0],[-1,-1],[-1,1],[-1,-1],[0,1],[0,-1],[1,0],[1,0],[1,-1],[0,-1],[1,0],[1,0],[1,0],[0,1],[1,0],[0,-1],[1,-1],[1,1],[0,1],[1,0],[0,1],[1,0],[1,0],[1,0],[1,-1],[0,-1],[0,-1],[-1,-1],[0,-1],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,-1],[-1,0],[-1,0],[-1,-1],[0,1],[-1,-1],[-1,0],[0,-1],[-1,0],[-3,-2],[-3,-1],[-2,-2],[0,-1],[-1,0],[-1,0],[0,1],[0,1],[-1,1],[0,1],[-1,0],[0,1],[1,0],[0,1],[0,1],[-1,-1],[-1,0],[0,-1],[0,14],[0,1],[0,4],[1,1],[1,0],[0,1],[0,1],[0,1],[1,1],[-1,0],[0,1],[0,1],[-1,0],[1,1],[0,1],[0,1],[1,0],[0,1],[1,1],[1,1],[0,1],[-1,0],[0,1],[-1,0],[0,1],[0,1],[-1,1],[-1,0],[0,1],[0,1],[39,0]],[[118,905],[1,-1],[1,-1],[0,-1],[2,0],[2,-5],[1,-1],[1,0],[0,-1],[0,-1],[0,-1],[0,-1],[0,-1],[0,-2],[-1,-2],[-1,0],[0,-1],[-1,0],[-1,0],[-1,-1],[0,1],[-1,0],[-1,1],[1,0],[2,0],[0,1],[0,1],[-1,1],[-1,0],[-1,0],[-2,-1],[-1,-1],[-1,0],[-1,0],[-1,0],[0,-1],[0,-1],[1,0],[2,0],[1,-1],[3,1],[1,0],[1,-2],[-1,-1],[0,-1],[0,-3],[1,-4],[3,-8],[7,-12],[5,-6],[4,-2],[1,1],[2,0],[0,1],[-1,-2],[-1,0],[-1,-1],[0,-1],[0,-1],[0,-1],[0,-1],[0,-1],[1,-1],[0,-2],[1,0],[1,0],[0,1],[0,1],[0,1],[0,1],[0,1],[1,1],[0,1],[0,1],[-1,1],[0,1],[1,1],[1,3],[-1,-3],[1,-1],[3,-1],[3,-1],[0,1],[3,1],[6,0],[4,-1],[2,-7],[0,-1],[-1,-1],[0,-2],[0,-2],[0,-2],[0,-2],[0,-1],[-1,-2],[0,-2],[-1,-2],[-1,-2],[0,-2],[0,1],[-1,0],[0,-1],[-1,0],[0,-2],[1,0],[0,-1],[1,0],[0,-1],[-2,-3],[0,-1],[-1,0],[0,-1],[0,-1],[0,-1],[-1,0],[0,-1],[0,-1],[-1,-6],[0,-2],[0,-2],[0,-1],[-1,-1],[0,-1],[0,-9],[0,-1],[0,-2],[0,-1],[-2,-1],[0,1],[0,1],[-1,0],[0,-1],[0,-1],[-1,0],[-1,1],[0,-1],[-1,0],[0,2],[-1,-2],[0,-1],[-3,-1],[-9,-7],[1,-1],[6,6],[2,1],[1,-1],[0,1],[2,2],[0,-1],[2,1],[1,1],[1,0],[0,-1],[1,1],[1,0],[1,0],[0,-1],[0,-1],[0,-1],[0,-2],[1,-21],[0,-1],[1,-2],[1,-4],[1,-12],[1,-4],[4,-19],[0,-2],[3,-14],[6,-16],[6,-13],[2,-12],[2,-4],[2,-11],[2,0],[-3,0],[-1,0],[0,1],[-1,0],[0,4],[-1,2],[1,-6],[0,-1],[1,0],[1,-1],[1,0],[2,0],[-1,0],[-2,-11],[-5,-34],[-1,-28],[0,-2],[2,-36],[0,-1],[0,-1],[-1,-11],[-181,0],[0,391],[118,0]],[[25,903],[-25,0],[0,121],[25,0],[0,-121]],[[121,957],[0,-1],[1,-1],[0,-1],[-1,-1],[0,4]],[[208,1013],[0,-1],[-1,0],[1,0],[0,-1],[0,-1],[0,-1],[-1,0],[0,-1],[-1,0],[-1,0],[0,1],[-1,-1],[1,-1],[0,-1],[-1,0],[1,-1],[-1,0],[-1,0],[0,-1],[0,-1],[-1,0],[-1,0],[0,1],[-1,0],[0,-1],[-2,0],[-1,-1],[-1,0],[0,-1],[-1,0],[0,-1],[0,-1],[1,0],[-1,0],[1,-1],[0,-1],[0,-1],[-1,0],[-1,0],[0,-1],[1,0],[0,-1],[0,-1],[1,0],[0,-1],[-1,1],[-1,0],[-1,0],[0,-1],[-1,0],[0,-1],[0,-1],[-1,0],[0,-1],[0,-1],[0,-1],[-1,0],[0,-1],[1,-1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,1],[-1,0],[-1,0],[0,-1],[-1,0],[-1,-1],[0,-1],[0,-1],[0,-1],[0,1],[-1,0],[0,-1],[0,1],[0,-1],[-1,0],[0,1],[-1,0],[-1,-1],[-1,-1],[-1,0],[-1,0],[-1,-1],[-1,0],[-1,0],[-1,0],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,0],[0,-1],[-1,0],[-1,0],[0,1],[-1,0],[0,1],[-1,0],[0,1],[0,1],[0,1],[0,1],[1,1],[-1,0],[0,1],[0,1],[0,1],[0,1],[-1,0],[0,-1],[0,-1],[0,-1],[-1,-1],[0,-1],[1,0],[-1,-1],[0,-1],[0,-1],[-1,0],[-1,1],[-1,0],[0,1],[-1,0],[-1,0],[-1,-1],[0,1],[0,1],[-1,0],[-1,0],[0,-1],[0,-1],[-1,0],[-1,0],[-1,0],[0,-1],[-1,0],[-1,0],[0,1],[0,-1],[1,0],[1,0],[1,0],[1,-1],[2,1],[1,0],[1,-1],[2,0],[1,-1],[0,-1],[0,1],[-1,0],[-1,0],[-1,-1],[1,0],[1,0],[1,-1],[1,0],[1,0],[1,0],[0,-1],[0,1],[1,-1],[-42,0],[0,1],[0,1],[0,1],[0,1],[-1,0],[0,1],[0,1],[0,1],[0,37],[87,0]],[[121,966],[1,-1],[0,-1],[0,-1],[1,0],[0,-1],[-1,-1],[-1,-1],[0,-1],[0,-1],[0,8]],[[167,962],[1,0],[0,1],[0,-1],[0,-1],[-1,1]]]}</code></pre></noscript></div>
</p>

<p>TileStache provides an easy-to-use point of entry for vector tiles. In a later post I&rsquo;ll go over some of the profiling
experiments I&rsquo;ve been running, using TileStache&rsquo;s dynamic line simplification, and it&rsquo;s affects on file size as well as
the aesthetic affects on representations of these geometries.</p>

<p>I&rsquo;ll also be writing out the work I did extending TileStache to support calls to the <a href="http://labs.giphy.com">Giphy Labs API</a>: <a href="http://mattmakesmaps.github.io/TileStache-GiphyAPI-Demo/">http://mattmakesmaps.github.io/TileStache-GiphyAPI-Demo/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hack GeoDjango Admin with Mapquest Tiles]]></title>
    <link href="http://mattmakesmaps.com/blog/2013/05/01/django-add-mapquest-tiles/"/>
    <updated>2013-05-01T20:53:00-07:00</updated>
    <id>http://mattmakesmaps.com/blog/2013/05/01/django-add-mapquest-tiles</id>
    <content type="html"><![CDATA[<p>The <a href="http://geodjango.org/">GeoDjango model</a> admin provides a great <a href="http://openlayers.org/">OpenLayers</a> interface, allowing a user to create geographic features (points, lines, polygons) directly via a web map. Out-of-the-box,
GeoDjango ships with a base GeoAdmin class, using the default OL world borders layer,
as well as a subclass for OSM streets data. The OSM layer is great, and provides a good base
for most use cases. That being said, for <a href="https://github.com/mattmakesmaps/PntTrax">PntTrax</a>, I needed aerial tiles. <!-- more -->My application deals
primarily with the storage of field collected (GPS, field notes, aerial markup, etc.) data.
Our data occur primarily in non-urban areas, where natural features provide a much
better context for orientation then would be expected with any streets layer, OSM or otherwise.
Mapquest provides a good set of aerial tiles, that can be easily integrated into OpenLayers.</p>

<p>It&rsquo;s easier to place a point on this:</p>

<p><img class="<a" src="href="http://mattmakesmaps.com/images/2013-04-30/aerial.jpg">http://mattmakesmaps.com/images/2013-04-30/aerial.jpg</a>" width="500"></p>

<p>Then this:</p>

<p><img class="<a" src="href="http://mattmakesmaps.com/images/2013-04-30/osm.png">http://mattmakesmaps.com/images/2013-04-30/osm.png</a>" width="500"></p>

<p>Hacking the admin to display the <a href="http://developer.mapquest.com/web/products/open/map">Mapquest aerial tiles</a> is a pretty straightforward process.
From the gis contrib package, we&rsquo;ll modify <a href="https://github.com/django/django/blob/master/django/contrib/gis/admin/options.py">options.py</a> and its <a href="https://github.com/django/django/blob/master/django/contrib/gis/admin/__init__.py">__init__.py</a>, subclassing the OSMGeoAdmin. Within the <a href="https://github.com/django/django/tree/master/django/contrib/gis/templates/gis/admin">templates
folder</a>,
we&rsquo;ll create two new files, a html template file, that actually points to a javascript file
containing a reference to the Mapquest Open Aerial tiles service.</p>

<h2>Creating mapquestGeoAdminSubclass</h2>

<p>The <a href="https://github.com/django/django/blob/master/django/contrib/gis/admin/options.py#L132-L139">OSMGeoAdmin class</a> is a subclass of the base GeoModelAdmin. The GeoModelAdmin contains a set of
configuration parameters for the map, covering basic setup. The OSMGeoAdmin class utilizes
many of those configuration parameters, but configures the map for a spherical mercator projection.
Since our Mapquest Aerial Tiles also require a spherical mercator projection, our class will
be a subclass of the OSMGeoAdmin.</p>

<p>We add the following code below the OSMGeoAdmin class definition.</p>

<p>``` python</p>

<pre><code># Subclass OSMGeoAdmin, pointing to the To-Be-Created
# Mapquest template file.`
class mapquestGeoAdmin(OSMGeoAdmin):
    map_template = 'gis/admin/mapquest.html'
</code></pre>

<p>```</p>

<h2>Modify the GIS Admin Package&rsquo;s __init__.py</h2>

<p>The <code>__init__.py</code> file imports the <code>OSMGeoAdmin</code> class, let&rsquo;s modify it to include our
new subclass</p>

<p>``` python</p>

<pre><code># From this
from django.contrib.gis.admin.options import OSMGeoAdmin
# To this
from django.contrib.gis.admin.options import OSMGeoAdmin, mapquestGeoAdmin
</code></pre>

<p>```</p>

<h2>Create mapquest.js</h2>

<p>Again, using the OpenStreetMap implementation as a reference, we can see that <code>osm.js</code> extends the basic <code>openlayers.js</code> file, but replaces the contents of the <code>base layer</code>
block with an a reference to the OpenStreetMap layer.</p>

<p>We&rsquo;ll create a similar file in this package called <code>mapquest.js</code>. The contents are as
follows:</p>

<p>
```
{# Source: <a href="http://openlayers.org/dev/examples/mapquest.html">http://openlayers.org/dev/examples/mapquest.html</a> #}
{% extends &ldquo;gis/admin/openlayers.js&rdquo; %}
{% block base_layer %}</p>

<pre><code>    new OpenLayers.Layer.XYZ(
        "Imagery",
        [
            "http://otile1.mqcdn.com/tiles/1.0.0/sat/${z}/${x}/${y}.png",
            "http://otile2.mqcdn.com/tiles/1.0.0/sat/${z}/${x}/${y}.png",
            "http://otile3.mqcdn.com/tiles/1.0.0/sat/${z}/${x}/${y}.png",
            "http://otile4.mqcdn.com/tiles/1.0.0/sat/${z}/${x}/${y}.png"
        ],
        {
            attribution: "Tiles Courtesy of &lt;a href='http://open.mapquest.co.uk/' target='_blank'&gt;MapQuest&lt;/a&gt;. Portions Courtesy NASA/JPL-Caltech and U.S. Depart. of Agriculture, Farm Service Agency. &lt;img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'&gt;",
            transitionEffect: "resize"
        }
    )
</code></pre>

<p>{% endblock %}
```
</p>

<h2>Create mapquest.html</h2>

<p>In the same folder, we&rsquo;ll create an html template file, pointing to our javascript file.
We&rsquo;ll call the file <code>mapquest.html</code>. Here are the contents:</p>

<p>
<code>
{% extends "gis/admin/openlayers.html" %}
{% block openlayers %}{% include "gis/admin/mapquest.js" %}{% endblock %}
</code>
</p>

<h2>In admin.py, Reference mapquestGeoAdmin</h2>

<p>The last step is to replace references to <code>GeoModelAdmin</code> or <code>OSMGeoAdmin</code> to
<code>mapquestGeoAdmin</code>.</p>

<p>```
class PntTraxGeoAdmin(admin.mapquestGeoAdmin):</p>

<pre><code>"""Base Class for Geometry Table Admin"""
list_display = ('name','collectDate','group','featurePurpose','collectionMethod')
list_editable = ('featurePurpose','group','collectionMethod')
list_filter = ('featurePurpose','group__name')
</code></pre>

<p>```</p>

<p>And there you go. Your Django GeoAdmin interface is now rocking aerial tiles courtesy
of Mapquest.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GeoDjango: Standing Up A GeoJSON Web-Service]]></title>
    <link href="http://mattmakesmaps.com/blog/2011/12/12/geodjango-standing-up-a-geojson-web-service/"/>
    <updated>2011-12-12T00:30:17-08:00</updated>
    <id>http://mattmakesmaps.com/blog/2011/12/12/geodjango-standing-up-a-geojson-web-service</id>
    <content type="html"><![CDATA[<p>The models are complete. The database is loaded with some test tabular and spatial data. We&rsquo;re pushing out HTML representations of attribute data using GeoDjango&rsquo;s standard templating functions. Now, the focus moves to visualizing these features' geometries in a spatial context. Just as with a Django QuerySet, GeoDjango provides a GeoQuerySet. <!-- more --> When paired with a spatially-enabled database (e.g. PostGIS, SpatialLite, etc.), the GeoQuerySet provides functionality for querying data using a series of spatial filters, in addition to tabular filters. As a point of reference, the GeoDjango docs have great tables depicting a blow-by-blow comparison of different spatial databases, displaying each available <a href="https://docs.djangoproject.com/en/dev/ref/contrib/gis/db-api/#spatial-lookup-compatibility">Spatial Lookup</a> and <a href="https://docs.djangoproject.com/en/dev/ref/contrib/gis/db-api/#geoqueryset-methods">GeoQuerySet method</a>. Take note, PostGIS is the clear winner in terms of functionality ;)</p>

<h2>Why GeoJSON?</h2>

<p>From the perspective of exporting data, GeoDjango supports a number of formats. The GeoQuerySet methods can represent your model&rsquo;s geometry column in a number of different <a href="https://docs.djangoproject.com/en/dev/ref/contrib/gis/geoquerysets/#geometry-output">formats</a>: GeoHash, GeoJSON, GML, KML, and SVG. Of all these serialization formats, I&rsquo;ve found KML to be the most frequently used amongst GeoDjango users. Illustrative of this, three of the four functions in <a href="https://code.djangoproject.com/browser/django/trunk/django/contrib/gis/shortcuts.py">django.contrib.gis.shortcuts</a> have to do with KML/KMZ. That&rsquo;s awesome, but where is the love for GeoJSON?</p>

<p>KML can be easily consumed by OpenLayers, the king of open source web mapping viewers. But some of the new kids, e.g. leaflet, polymaps, look to favor GeoJSON over KML as an input for dynamically rendered data, not directly consuming KML out-of-the-box. That being said, if you want KML, this <a href="https://github.com/shramov/Leaflet/tree/master/src/layer">fork of leaflet</a> looks like it will work for you. In my particular project, I&rsquo;m interested in using leaflet, so GeoJSON was the way to go.</p>

<p>Later on, I&rsquo;d like to do some speed comparisons, rendering the same featureset using OpenLayers, represented as both KML and GeoJSON, but that&rsquo;s for the future. I&rsquo;m wondering if OpenLayers will handle the JSON object faster then KML&rsquo;s XML? JSON is just JavaScript after all.</p>

<h2>The Problem</h2>

<p>The GeoDjango GeoQuerySet API has built in methods to handle the serialization and de-serialization of a result set&rsquo;s geometries into different formats. The problem is that these methods only wrap the geometries of a result set. For display in a web mapping application, like leaflet, I want to have access to both the geometry in the format of my choosing, as well as the supplementary attributes (name, type, etc.) which provide context for that geometry.</p>

<p>For example, asking for the GeoJSON representation of a given feature through Django&rsquo;s shell, like this:</p>

<p>``` python</p>

<h1>Import Models from the Company Application</h1>

<p>from company.Models import *</p>

<h1>Create a GeoQuerySet from the primary key, return GeoJSON</h1>

<p>qs = Boundary.objects.filter(pk=1).geojson()</p>

<h1>Print GeoJSON representation of geom</h1>

<p>print qs[0].geojson
```</p>

<p>Will produce a GeoJSON object like this:</p>

<p>``` javascript
{
 &ldquo;type&rdquo;:&ldquo;MultiPolygon&rdquo;,
  &ldquo;coordinates&rdquo;:[</p>

<pre><code>[
  [
    [
      -122.574295,
      47.856636
    ],
    [
      -122.573924,
      47.85718
    ],
    [
      -122.573719,
      47.85757
    ] // Truncated Verticies
  ]
]
</code></pre>

<p>  ]
}
```</p>

<p>As shown in the example above, the geometries are returned, but not the tabular attributes associated with that feature. Looking at the <a href="http://geojson.org/geojson-spec.html">GeoJSON spec</a>, there are multiple &lsquo;type&rsquo; values which an object can be constrained by. Using GeoDjango&rsquo;s geoJSON() method will produce a type matching the geometry listed in the associated GeoDjango model (point, line, polygon, etc). The distinction here is that I&rsquo;d like to return a GeoJSON object of type &lsquo;Feature&rsquo; or &lsquo;FeatureCollection&rsquo;. These types require an additional &lsquo;properties&rsquo; parameter, which can store tabular attributes. From the spec:</p>

<blockquote><p>A feature object must have a member with the name &ldquo;properties&rdquo;. The value of the properties member is an object (any JSON object or a JSON null value).</p></blockquote>

<p>So, the trick now is to dynamically create a GeoJSON object which contains both populated Geom and Properties attributes.</p>

<h2>The fix (vectorformats)</h2>

<p>In order to create a fully populated GeoJSON object, we need to bring in some extra assistance. Some quick searching brought me to this stack exchange <a href="http://stackoverflow.com/questions/3034482/rendering-spatial-data-of-geoqueryset-in-a-custom-view-on-geodjango">response</a>, from <a href="http://crschmidt.net/blog/">Chris Schmidt</a>. Chris' vectorformats package handles the serialization and de-serializtion of a variety of formats, including Django Querysets and GeoJSON. From the project <a href="http://packages.python.org/vectorformats/">homepage</a>:</p>

<blockquote><p>The vectorformats library is designed to make it easy to serialize content from any source to any source within Python. Think of it as a “poor man’s OGR” – a pure Python implementation of transforming features to and from various formats (largely XML based).</p></blockquote>

<p>Installing vectorformats is as easy as:</p>

<p><code>bash
$sudo easy_install vectorformats
</code></p>

<p>From there, as outlined in the above referenced post, it&rsquo;s only a matter of adding a few lines into your GeoDjango app&rsquo;s <a href="https://github.com/mattmakesmaps/geodjango/blob/master/sampling/views.py">view function</a>.</p>

<p>``` python</p>

<h1>Using vectorfeatures module return a GeoJSON FeatureCollection</h1>

<h1>for a given boundary ID.</h1>

<p>def boundary_detail(request, boundary_id):</p>

<pre><code>boundary_detail = Boundary.objects.filter(pk=boundary_id)
djf = Django.Django(geodjango='geom', properties=['name'])
geoj = GeoJSON.GeoJSON()
s = geoj.encode(djf.decode(boundary_detail))
return HttpResponse(s)
</code></pre>

<p>```</p>

<p>The resulting GeoJSON object, represented as a &lsquo;type&rsquo; of &lsquo;FeatureCollection&rsquo;:</p>

<p>``` javascript
{
  &ldquo;crs&rdquo;:null,
  &ldquo;type&rdquo;:&ldquo;FeatureCollection&rdquo;,
  &ldquo;features&rdquo;:[</p>

<pre><code>{
  "geometry":{
    "type":"MultiPolygon",
    "coordinates":[
      [
        [
          [
            -122.574295,
            47.856636
          ],
          [
            -122.573924,
            47.85718
          ],
          [
            -122.573719,
            47.85757
          ] // Truncated Verticies
        ]
      ]
    ]
  },
  "type":"Feature",
  "id":1,
  "properties":{
    "name":"Port Gamble"
  }
}
</code></pre>

<p>  ]
}
```</p>

<p>And there you have it, GeoJSON containing both the geometry and attributes. This output can now be mapped to URL, creating an endpoint such as &lsquo;<a href="http://my-site.com/geojson/boundary/">http://my-site.com/geojson/boundary/</a>{boundary_id}/&rsquo;. Pass this to your web mapping client, and you&rsquo;re ready to rock.</p>
]]></content>
  </entry>
  
</feed>
